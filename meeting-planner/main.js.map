{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/dashboard/admin-dashboard/admin-dashboard.component.css","webpack:///./src/app/dashboard/admin-dashboard/admin-dashboard.component.html","webpack:///./src/app/dashboard/admin-dashboard/admin-dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/user-dashboard/user-dashboard.component.css","webpack:///./src/app/dashboard/user-dashboard/user-dashboard.component.html","webpack:///./src/app/dashboard/user-dashboard/user-dashboard.component.ts","webpack:///./src/app/meeting/create-meeting/create-meeting.component.css","webpack:///./src/app/meeting/create-meeting/create-meeting.component.html","webpack:///./src/app/meeting/create-meeting/create-meeting.component.ts","webpack:///./src/app/meeting/meeting.module.ts","webpack:///./src/app/meeting/update-meeting/update-meeting.component.css","webpack:///./src/app/meeting/update-meeting/update-meeting.component.html","webpack:///./src/app/meeting/update-meeting/update-meeting.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/server-error/server-error.component.css","webpack:///./src/app/server-error/server-error.component.html","webpack:///./src/app/server-error/server-error.component.ts","webpack:///./src/app/shared/first-char/first-char.component.css","webpack:///./src/app/shared/first-char/first-char.component.html","webpack:///./src/app/shared/first-char/first-char.component.ts","webpack:///./src/app/shared/my-cover/my-cover.component.css","webpack:///./src/app/shared/my-cover/my-cover.component.html","webpack:///./src/app/shared/my-cover/my-cover.component.ts","webpack:///./src/app/shared/my-nav/my-nav.component.css","webpack:///./src/app/shared/my-nav/my-nav.component.html","webpack:///./src/app/shared/my-nav/my-nav.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/verify-email/verify-email.component.css","webpack:///./src/app/user/verify-email/verify-email.component.html","webpack:///./src/app/user/verify-email/verify-email.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACM;AAGO;AAC4B;AACpB;AACG;AAC0B;AACT;AACM;AACX;AACc;AACA;AACK;AACH;AAG7F,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,YAAY,EAAC,SAAS,EAAC,0EAAc,EAAC;IAC7C,EAAC,IAAI,EAAE,aAAa,EAAC,SAAS,EAAC,6EAAe,EAAC;IAC/C,EAAC,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAC,uGAAuB,EAAC;IACjE,EAAC,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAC,8FAAoB,EAAC;IACnE,EAAC,IAAI,EAAE,sCAAsC,EAAE,SAAS,EAAC,oGAAsB,EAAC;IAChF,EAAC,IAAI,EAAE,+BAA+B,EAAC,SAAS,EAAC,0GAAsB,EAAC;IAGxE,EAAC,IAAI,EAAE,2BAA2B,EAAC,SAAS,EAAC,wGAAsB,EAAC;IACpE,EAAC,IAAI,EAAE,sCAAsC,EAAC,SAAS,EAAC,wGAAsB,EAAC;IAC/E,EAAC,IAAI,EAAE,8BAA8B,EAAC,SAAS,EAAC,6GAAuB,EAAC;IAGxE,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAC,yFAAoB,EAAC;IACrD,EAAC,IAAI,EAAG,EAAE,EAAE,UAAU,EAAC,YAAY,EAAC,SAAS,EAAC,MAAM,EAAC;IACrD,EAAC,IAAI,EAAE,GAAG,EAAC,SAAS,EAAC,8FAAqB,EAAC;IAC3C,EAAC,IAAI,EAAE,IAAI,EAAC,SAAS,EAAC,8FAAqB,EAAC;CAE7C,CAAC;AAeF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAZ5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAE7B;YACD,OAAO,EAAC;gBACN,4DAAY;aACb;YAED,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpD7B,oCAAoC,oBAAoB,qCAAqC,sBAAsB,KAAK,0BAA0B,0BAA0B,kBAAkB,uBAAuB,KAAK,K;;;;;;;;;;;ACA1N,6jB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,iBAAiB,CAAC;IAC5B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACS;AACT;AACgC;AACb;AACV;AAGT;AACmC;AACL;AACnC;AACe;AACM;AA8B/D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8FAAqB;gBACrB,0FAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4DAAU;gBACV,sEAAa;gBACb,4EAAe;gBACf,oEAAgB;gBAChB,4DAAY;gBACZ,4FAAuB;gBACvB,0DAAW;gBACX,qEAAgB;gBAChB,wDAAY,CAAC,OAAO,CAAC;oBACnB,OAAO,EAAE,KAAK;oBACd,aAAa,EAAE,iBAAiB;oBAChC,iBAAiB,EAAE,IAAI;iBACxB,CAAC;aACH;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CqB;AACkB;AAU7D;IAIE,oBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAF9B,YAAO,GAAG,8BAA8B,CAAC;QAyEzC,8BAAyB,GAAG,UAAC,IAAI;YACtC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,CAAC,mCAAiC;QAE3B,gCAA2B,GAAQ;YACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QACtD,CAAC,gCAA8B;IA7EU,CAAC;IAE5C,yCAAyC;IAEhC,2BAAM,GAAb,UAAc,IAAI;QAEhB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC;aAChC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC9B,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC;aACtC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;aACxB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC9B,GAAG,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC;aAC7B,GAAG,CAAC,aAAa,EAAC,IAAI,CAAC,WAAW,CAAC;aACnC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,kBAAe,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC,cAAY;IAEN,2BAAM,GAAb,UAAc,IAAI;QAEhB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;aACxB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,iBAAc,EAAE,MAAM,CAAC,CAAC;IAChE,CAAC,cAAY;IAEN,kCAAa,GAApB,UAAqB,IAAI;QAEvB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;QAE3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,yBAAsB,EAAE,MAAM,CAAC,CAAC;IACxE,CAAC,qBAAmB;IAEb,mCAAc,GAArB,UAAsB,IAAI;QAExB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC;aAC5C,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,0BAAuB,EAAE,MAAM,CAAC,CAAC;IACxE,CAAC,sBAAoB;IAEd,gCAAW,GAAlB,UAAmB,MAAM;QAEvB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;QAExB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,uBAAoB,EAAE,MAAM,CAAC,CAAC;IACrE,CAAC,mBAAiB;IAEX,oCAAe,GAAtB;QAEE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;IAE9D,CAAC,uBAAqB;IAGf,sCAAiB,GAAxB;QAEE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;IAEnE,CAAC,yBAAuB;IAEjB,6BAAQ,GAAf,UAAgB,SAAS;QAEvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,kCAA6B,SAAW,CAAC,CAAC;IACjF,CAAC,yBAAuB;IAUjB,2BAAM,GAAb,UAAc,MAAM,EAAC,SAAS;QAE5B,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,WAAW,EAAC,SAAS,CAAC;QAE7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,eAAU,MAAM,YAAS,EAAE,MAAM,CAAC,CAAC;IAC3E,CAAC,qBAAmB;IAEtB,mCAAmC;IAGnC,wCAAwC;IAE/B,+BAAU,GAAjB,UAAkB,IAAI;QAEpB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC;aACtC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;aAC1B,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC9B,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC;aACxC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC;aAC5C,GAAG,CAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC;aAC7C,GAAG,CAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC;aAC7C,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAAC,cAAc,CAAC;aACzC,GAAG,CAAC,oBAAoB,EAAC,IAAI,CAAC,kBAAkB,CAAC;aACjD,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,YAAY,CAAC;aACrC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,yBAAsB,EAAE,MAAM,CAAC,CAAC;IACxE,CAAC,kBAAgB;IAEV,sCAAiB,GAAxB,UAAyB,SAAS,EAAC,SAAS;QAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,kBAAa,SAAS,2BAAsB,SAAW,CAAC,CAAC;IAChG,CAAC,yBAAuB;IAEjB,kCAAa,GAApB,UAAqB,IAAI;QAEvB,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC;aACtC,GAAG,CAAC,kBAAkB,EAAC,IAAI,CAAC,gBAAgB,CAAC;aAC7C,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAAC,cAAc,CAAC;aACzC,GAAG,CAAC,oBAAoB,EAAC,IAAI,CAAC,kBAAkB,CAAC;aACjD,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,YAAY,CAAC;aACrC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,kBAAa,IAAI,CAAC,SAAS,mBAAgB,EAAE,MAAM,CAAC,CAAC;IAC5F,CAAC,kBAAgB;IAGV,sCAAiB,GAAxB,UAAyB,MAAM,EAAC,SAAS;QAEvC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,oCAA+B,MAAM,mBAAc,SAAW,CAAC,CAAC;IACvG,CAAC,yBAAuB;IAEjB,kCAAa,GAApB,UAAqB,SAAS,EAAC,SAAS;QAEtC,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,WAAW,EAAC,SAAS,CAAC;QAE7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,kBAAa,SAAS,YAAS,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC,qBAAmB;IAEb,yCAAoB,GAA3B,UAA4B,MAAM,EAAC,SAAS;QAE1C,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;aACrB,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC;QAE9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,2CAAwC,EAAE,MAAM,CAAC,CAAC;IAC1F,CAAC,cAAY;IAxJF,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU;OAJ1B,UAAU,CA0JtB;IAAD,iBAAC;CAAA;AA1JsB;;;;;;;;;;;;ACXvB,+BAA+B,kBAAkB,mBAAmB,yBAAyB,qBAAqB,sBAAsB,wBAAwB,0BAA0B,KAAK,4BAA4B,oBAAoB,qBAAqB,2BAA2B,wBAAwB,0BAA0B,4BAA4B,OAAO,gBAAgB,yBAAyB,oBAAoB,iCAAiC,2BAA2B,8BAA8B,OAAO,iBAAiB,2BAA2B,oBAAoB,gCAAgC,8BAA8B,gCAAgC,OAAO,+B;;;;;;;;;;;ACAvrB,iQAAiQ,4YAA4Y,+BAA+B,MAAM,2BAA2B,6QAA6Q,qCAAqC,uQAAuQ,kCAAkC,qQAAqQ,oDAAoD,wBAAwB,qEAAqE,iQAAiQ,+BAA+B,4XAA4X,yLAAyL,+BAA+B,oJAAoJ,0YAA0Y,kHAAkH,+BAA+B,yLAAyL,oBAAoB,4IAA4I,oBAAoB,8jBAA8jB,iTAAiT,qDAAqD,uDAAuD,wgCAAwgC,qNAAqN,iCAAiC,27DAA27D,gBAAgB,0BAA0B,eAAe,o6BAAo6B,gBAAgB,sBAAsB,eAAe,wdAAwd,4jCAA4jC,wS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9rU;AACxB;AAGuB;AAE1C;AAEgB;AACM;AAEV;AACc;AACR;AAGjD,IAAM,MAAM,GAAQ;IAClB,KAAK,EAAE;QACL,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CACF,CAAC;AAUF;IAkDE,iCACS,UAAsB,EACtB,aAA4B,EAC5B,MAAsB,EACtB,MAAc,EACb,MAAqB,EACrB,KAAe;QANzB,iBAUC;QATQ,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAU;QAnDzB,SAAI,GAAW,OAAO,CAAC;QAEvB,aAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;QAO5B,YAAO,GAA0B;YAC/B;gBACE,KAAK,EAAE,0CAA0C;gBACjD,OAAO,EAAE,UAAC,EAAmC;wBAAjC,gBAAK;oBACf,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,0CAA0C;gBACjD,OAAO,EAAE,UAAC,EAAmC;wBAAjC,gBAAK;oBACf,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACrC,CAAC;aACF;SACF,CAAC;QAEF,YAAO,GAAiB,IAAI,4CAAO,EAAE,CAAC;QACtC,oBAAe,GAAY,KAAK,CAAC;QAa1B,mBAAc,GAAQ,EAAE;QACxB,aAAQ,GAAQ,EAAE,CAAC;QACnB,WAAM,GAAoB,EAAE,CAAC;QAE7B,mBAAc,GAAY,IAAI,CAAC;QA8I/B,gBAAW,GAAG;YAEnB,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,WAAW;oBAC7D,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC;oBAIvC,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;oBACxD,CAAC;gBACH,CAAC,EACC,UAAC,KAAK;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;oBACpD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC,YAAW;iBACb,CAAC,eAAc;YAElB,CAAC,SAAQ;YACT,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,CAAC,WAAU;QAEb,CAAC,mBAAiB;QAEX,wCAAmC,GAAG;YAE3C,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,IAAI,IAAI,IAAI,KAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnD,KAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,EAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,WAAW;oBACtF,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;oBAEvD,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;oBACnD,CAAC;gBACH,CAAC,EACC,UAAC,KAAK;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;oBACpD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC,YAAW;iBACb,CAAC,oBAAmB;YAEvB,CAAC,SAAQ;YACT,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,CAAC,WAAU;QAEb,CAAC,6BAA2B;QAErB,8BAAyB,GAAG;YAEjC,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,IAAI,IAAI,IAAI,KAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,KAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,WAAW;oBACvF,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;wBAE9B,KAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;wBAEjC,4BAA4B;wBAC5B,GAAG,CAAC,CAAqB,UAAa,EAAb,UAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;4BAAjC,IAAI,YAAY;4BACnB,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,YAAY,CAAC;4BAC/C,YAAY,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;4BAC7D,YAAY,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;4BACzD,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;4BAClC,YAAY,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO;4BACnC,YAAY,CAAC,QAAQ,GAAG,IAAI;yBAE7B;wBACD,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC;wBAC5B,0BAA0B;wBAC1B,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;wBAEpB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;wBACxD,0BAA0B;oBAE5B,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;wBACjD,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACnB,CAAC;gBACH,CAAC,EACC,UAAC,KAAK;oBACJ,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;wBACxB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,kCAAkC,CAAC,CAAC;wBACrF,KAAI,CAAC,MAAM,GAAG,EAAE;oBAClB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;wBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAEzC,CAAC;gBACH,CAAC,YAAW;iBACb,CAAC,mCAAkC;YAEtC,CAAC,SAAQ;YACT,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,CAAC;QAEH,CAAC,iCAA+B;QAqCzB,mBAAc,GAAG,UAAC,MAAM;YAC7B,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACtD,UAAC,WAAW;gBACV,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBAE/B,8DAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,yBAAwB;oBACnD,8DAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAC5B,8DAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;oBAE9B,YAAY,CAAC,KAAK,EAAE,CAAC;oBAErB,KAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,uDAAsD;oBAC9F,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,iGAAgG;oBAGhI,UAAU,CAAC;wBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,oCAAmC;oBAC3E,CAAC,EAAE,IAAI,CAAC,CAAC,gCAA+B;gBAG1C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;oBAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,4CAA2C;gBACpF,CAAC,CAAC,gBAAgB;YACpB,CAAC,EACD,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,oCAAoC,CAAC,CAAC;gBAC7E,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC,gBAAc;QAGf,oCAAoC;QAEpC,UAAU;QACH,2BAAsB,GAAQ;YACnC,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE;iBAC5B,SAAS,CAAC;gBACT,2BAA2B;gBAC3B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,+EAA8E;YAE3H,CAAC,CAAC,CAAC,gBAAe;QACtB,CAAC,8BAA4B;QAEtB,sBAAiB,GAAQ;YAE9B,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE;iBACjC,SAAS,CAAC,UAAC,IAAI;gBACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,CAAC,CAAC,CAAC,gBAAe;QACtB,CAAC,yBAAuB;QAEjB,sBAAiB,GAAQ;YAC9B,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE;iBAChC,SAAS,CAAC,UAAC,IAAI;gBAEd,KAAI,CAAC,cAAc,GAAG,EAAE;gBACxB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACnB,kDAAkD;oBAClD,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBAED,GAAG,CAAC,CAAa,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB;oBAA7B,IAAI,IAAI;oBAEX,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,MAAM,GAAG,QAAQ;oBACxB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,MAAM,GAAG,SAAS;oBACzB,CAAC;iBAEF;YAEH,CAAC,CAAC,CAAC,gBAAe;QACtB,CAAC,yBAAuB;QAGxB,UAAU;QAEH,wBAAmB,GAAQ,UAAC,IAAI;YACrC,yDAAyD;YACzD,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEzC,CAAC,2BAAyB;IA9W1B,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,8DAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,2BAA2B,EAAE;QAC7D,IAAI,CAAC,OAAO,GAAG,8DAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5C,4BAA4B;QAC5B,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,EAAC;YAClC,IAAI,CAAC,sBAAsB,EAAE;YAC7B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,IAAI,CAAC,yBAAyB,EAAE;YAChC,IAAI,CAAC,iBAAiB,EAAE;QAC1B,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAC3D,CAAC;QAED,WAAW,CAAC;YACV,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IAEX,CAAC;IAGD,qBAAqB;IAErB,4CAAU,GAAV,UAAW,EAAyD;YAAvD,cAAI,EAAE,kBAAM;QACvB,EAAE,CAAC,CAAC,4DAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAErC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,EAAE,CAAC,CAAC,CAAC,0DAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEN,IAAI,CAAC,IAAI,GAAG,KAAK;YACnB,CAAC;QACH,CAAC;IACH,CAAC;IAGD,mDAAiB,GAAjB,UAAkB,EAA2D;YAAzD,gBAAK,EAAE,sBAAQ,EAAE,kBAAM;QACzC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;QACvB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,6CAAW,GAAX,UAAY,MAAc,EAAE,KAAU;QAGpC,EAAE,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAA8B,KAAK,CAAC,SAAW,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,KAAK,SAAS,CAAC;YAEjC,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAE1D,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QAGpB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,KAAK,KAAK,EAAhB,CAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAEH,yBAAyB;IAEhB,gDAAc,GAArB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC;IACvD,CAAC;IAGM,iDAAe,GAAtB;QACE,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAEvC,GAAG,CAAC,CAAqB,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAAjC,IAAI,YAAY;YAEnB,EAAE,CAAC,CAAC,0DAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,WAAW,IAAI,KAAK;mBACzG,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC;gBAC1D,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAEjD,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;oBAC5D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;oBACjD,IAAI,CAAC,cAAc,GAAG,KAAK;oBAC3B,KAAK,CAAC;gBACR,CAAC,eAAc;YAEjB,CAAC,SAAQ;YACT,IAAI,CAAC,EAAE,EAAC,WAAW,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;gBAC5D,IAAI,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAI,KAAK,CAAC,EAAC;gBAC7D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,YAAY,CAAC,YAAY,cAAW,EAAE,iBAAiB,CAAC,CAAC;YACvF,CAAC;SACF;IAEH,CAAC,mCAAiC;IAGlC,yBAAyB;IAElB,iDAAe,GAAtB,UAAuB,MAAM,EAAC,QAAQ;QACpC,IAAI,CAAC,UAAU,GAAG,MAAM;QACxB,IAAI,CAAC,YAAY,GAAG,QAAQ;QAC5B,IAAI,CAAC,yBAAyB,EAAE;IAClC,CAAC,mCAAiC;IAE3B,kDAAgB,GAAvB,UAAwB,MAAM;QAC5B,IAAI,CAAC,UAAU,GAAG,MAAM;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS;QAClC,IAAI,CAAC,yBAAyB,EAAE;IAClC,CAAC,oCAAkC;IAkH5B,uDAAqB,GAA5B,UAA6B,OAAO;QAApC,iBAgCC;QA/BC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;aAC7D,SAAS,CAAC,UAAC,WAAW;YAErB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAC;gBAE3D,IAAI,aAAa,GAAG;oBAClB,OAAO,EAAE,SAAO,KAAI,CAAC,YAAY,oCAA+B,OAAO,CAAC,YAAY,uCAAoC;oBACxH,MAAM,EAAE,OAAO,CAAC,aAAa;iBAC9B;gBAED,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;YAE1C,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YACnD,CAAC;QACH,CAAC,EACC,UAAC,KAAK;YAEJ,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CAAC;YACrE,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAEzC,CAAC;QAEH,CAAC,CAAC,CAAC,4BAA2B;IAEpC,CAAC,qBAAmB;IA5UO;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;iEAAM;IAC1B;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAoB,yDAAW;sEAAM;IAC3C;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,yDAAW;+DAAM;IAH3C,uBAAuB;QARnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAuDqB,uDAAU;YACP,6DAAa;YACpB,8DAAc;YACd,sDAAM;YACL,wDAAa;YACd,sFAAQ;OAxDd,uBAAuB,CA6anC;IAAD,8BAAC;CAAA;AA7amC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BK;AACM;AACoB;AACY;AAGO;AACH;AAE/B;AAEW;AACU;AACZ;AAEL;AAoBxD;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAlB3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4FAAuB;gBACvB,+DAAc,CAAC,OAAO,CAAC;oBACrB,OAAO,EAAE,4DAAW;oBACpB,UAAU,EAAE,sFAAc;iBAC3B,CAAC;gBACF,0DAAW;gBACX,yEAAc,CAAC,OAAO,EAAE;gBACxB,sEAAmB;gBACnB,kEAAY;aAIb;YACD,YAAY,EAAE,CAAC,kGAAuB,EAAE,+FAAsB,CAAC;SAChE,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpC5B,sBAAsB,yBAAyB,OAAO,iBAAiB,kCAAkC,sBAAsB,OAAO,yBAAyB,oBAAoB,qBAAqB,2BAA2B,uBAAuB,wBAAwB,0BAA0B,4BAA4B,OAAO,gCAAgC,sBAAsB,uBAAuB,6BAA6B,0BAA0B,4BAA4B,8BAA8B,SAAS,wBAAwB,0BAA0B,KAAK,S;;;;;;;;;;;ACA7kB,iQAAiQ,8YAA8Y,+BAA+B,MAAM,2BAA2B,qQAAqQ,qCAAqC,qQAAqQ,kCAAkC,qQAAqQ,oDAAoD,KAAK,qEAAqE,iQAAiQ,+BAA+B,wXAAwX,mHAAmH,+BAA+B,2JAA2J,oHAAoH,2kBAA2kB,iTAAiT,qDAAqD,uDAAuD,0/BAA0/B,6MAA6M,sCAAsC,4YAA4Y,iBAAiB,mHAAmH,siC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCv3K;AACzB;AAGwB;AAE1C;AAGgB;AACM;AAGV;AACc;AACR;AAGjD,IAAM,MAAM,GAAQ;IAClB,GAAG,EAAE;QACH,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IACD,MAAM,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;IAED,KAAK,EAAE;QACL,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,SAAS;KACrB;CAGF,CAAC;AASF;IA0BE,gCACU,KAAe,EAChB,UAAsB,EACtB,aAA4B,EAE5B,MAAsB,EACtB,MAAc,EACb,MAAqB;QAP/B,iBAQG;QAPO,UAAK,GAAL,KAAK,CAAU;QAChB,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAE5B,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QA7B/B,SAAI,GAAW,OAAO,CAAC;QAEvB,aAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;QAO5B,YAAO,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAEtC,oBAAe,GAAY,KAAK,CAAC;QAM1B,aAAQ,GAAQ,EAAE,CAAC;QACnB,WAAM,GAAoB,EAAE,CAAC;QA8FpC,wBAAwB;QAGjB,8BAAyB,GAAG;YACjC,KAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAI,CAAC,UAAU,EAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACzE,UAAC,WAAW;gBACV,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAE9B,KAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;oBACjC,4BAA4B;oBAE5B,GAAG,EAAqB,UAAa,EAAb,UAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;wBAAjC,IAAI,YAAY;wBAChB,YAAY,CAAC,KAAK,GAAI,YAAY,CAAC,YAAY,CAAC;wBAChD,YAAY,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;wBAC7D,YAAY,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;wBACzD,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;wBAClC,YAAY,CAAC,QAAQ,GAAG,IAAI;qBAE7B;oBACH,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC;oBAC5B,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBAEpB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;oBACxD,0BAA0B;gBAE5B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;oBAChD,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACnB,CAAC;YACH,CAAC,EACD,UAAC,KAAK;gBACJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,kCAAkC,CAAC,CAAC;oBACrF,KAAI,CAAC,MAAM,GAAG,EAAE;gBAClB,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YACJ,CAAC,CACD,CAAC;QACF,CAAC,0BAAwB;QAEpB,mBAAc,GAAG;YAEpB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAI,CAAC,UAAU,EAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC9D,UAAC,WAAW;gBACV,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC/B,YAAY,CAAC,KAAK,EAAE,CAAC;oBACrB,8DAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,yBAAwB;oBACnD,8DAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAC5B,8DAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;oBAC9B,8BAA8B;oBAC9B,KAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,uDAAsD;oBAC9F,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,iGAAgG;oBAChI,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,oCAAmC;gBAC3E,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAC,QAAQ,CAAC;oBAC/C,oFAAoF;gBACtF,CAAC,CAAC,gBAAgB;YACpB,CAAC,EACD,UAAC,GAAG;gBACF,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACpB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,oCAAoC,CAAC,CAAC;gBAC7E,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YACL,CAAC,CAAC,CAAC;QAEP,CAAC,gBAAc;QAGX,2BAA2B;QAE7B,UAAU;QACH,2BAAsB,GAAQ;YACnC,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE;iBAC5B,SAAS,CAAC;gBACT,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,+EAA8E;YAE3H,CAAC,CAAC,CAAC,gBAAe;QACtB,CAAC,8BAA4B;QAEtB,sBAAiB,GAAQ;YAE9B,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE;iBACjC,SAAS,CAAC,UAAC,IAAI;gBACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAInB,CAAC,CAAC,CAAC,gBAAe;QACtB,CAAC,yBAAuB;QAGjB,wBAAmB,GAAE;YAE1B,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACrE,KAAI,CAAC,yBAAyB,EAAE,CAAC;gBACjC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC;IA5LD,CAAC;IAEH,yCAAQ,GAAR;QAAA,iBAyBC;QAvBC,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,8DAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI;QAEpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,2BAA2B,EAAE;QAE7D,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,OAAO,CAAC,EAAC;YAEnC,IAAI,CAAC,sBAAsB,EAAE;YAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAE3D,CAAC;QAED,WAAW,CAAC;YACV,KAAI,CAAC,eAAe,EAAE,CAAC,6CAA4C;QACrE,CAAC,EAAE,IAAI,CAAC,CAAC,mCAAkC;IAE7C,CAAC;IAED,2CAAU,GAAV,UAAW,EAAyD;YAAvD,cAAI,EAAE,kBAAM;QACvB,EAAE,CAAC,CAAC,4DAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,EAAE,CAAC,CACD,CAAC,0DAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC;gBACjE,MAAM,CAAC,MAAM,KAAK,CACpB,CAAC,CAAC,CAAC;gBACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,8BAA8B;gBAC9B,IAAI,CAAC,IAAI,GAAG,KAAK;YACnB,CAAC;QACH,CAAC;IACH,CAAC;IAED,kDAAiB,GAAjB,UAAkB,EAAuD;YAAtD,gBAAK,EAAC,sBAAQ,EAAC,kBAAM;QACtC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;QACvB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,4CAAW,GAAX,UAAY,MAAc,EAAE,KAAoB;QAC9C,oBAAoB;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC;IAEM,gDAAe,GAAtB;QACE,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,4BAA4B;QAC5B,GAAG,CAAC,CAAqB,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAAjC,IAAI,YAAY;YAEnB,EAAE,CAAC,CAAC,0DAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,WAAW,IAAI,KAAK;mBACzG,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC;gBAC1D,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAE1B,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;oBAC5D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;oBAEjD,KAAK,CAAC;gBACR,CAAC,eAAc;YAEjB,CAAC,SAAQ;YACT,IAAI,CAAC,EAAE,EAAC,WAAW,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;gBAC5D,IAAI,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAI,KAAK,CAAC,EAAC;gBAC7D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,YAAY,CAAC,YAAY,cAAW,EAAE,iBAAiB,CAAC,CAAC;YACvF,CAAC;SACF;IAEH,CAAC,mCAAiC;IAhHP;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;gEAAM;IACjC;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,yDAAW;8DAAM;IAF3C,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCA6BiB,sFAAQ;YACJ,uDAAU;YACP,6DAAa;YAEpB,8DAAc;YACd,sDAAM;YACL,wDAAa;OAjCpB,sBAAsB,CAgOlC;IAAD,6BAAC;CAAA;AAhOkC;;;;;;;;;;;;AChDnC,yBAAyB,wBAAwB,KAAK,qBAAqB,uBAAuB,KAAK,2BAA2B,oCAAoC,0EAA0E,KAAK,sBAAsB,qBAAqB,2BAA2B,KAAK,gBAAgB,yBAAyB,oBAAoB,+BAA+B,2BAA2B,8BAA8B,OAAO,iBAAiB,2BAA2B,oBAAoB,6BAA6B,2BAA2B,8BAA8B,OAAO,oBAAoB,4BAA4B,OAAO,sBAAsB,4BAA4B,OAAO,kDAAkD,gBAAgB,2BAA2B,SAAS,kBAAkB,8BAA8B,+BAA+B,SAAS,WAAW,6BAA6B,SAAS,KAAK,wEAAwE,gBAAgB,6BAA6B,WAAW,oBAAoB,6BAA6B,8BAA8B,SAAS,cAAc,wEAAwE,gBAAgB,2BAA2B,WAAW,oBAAoB,6BAA6B,8BAA8B,SAAS,cAAc,yEAAyE,gBAAgB,6BAA6B,WAAW,oBAAoB,6BAA6B,8BAA8B,SAAS,UAAU,oDAAoD,gBAAgB,2BAA2B,WAAW,oBAAoB,6BAA6B,8BAA8B,SAAS,UAAU,K;;;;;;;;;;;ACAt1D,iQAAiQ,8UAA8U,SAAS,6UAA6U,wBAAwB,GAAG,uBAAuB,yVAAyV,6BAA6B,oBAAoB,4BAA4B,qbAAqb,OAAO,sVAAsV,wkBAAwkB,qNAAqN,iCAAiC,kyGAAkyG,gBAAgB,GAAG,eAAe,+EAA+E,YAAY,0lBAA0lB,wBAAwB,GAAG,uBAAuB,67FAA67F,wP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx1T;AAEpB;AAE1B;AACM;AAErD,mBAAmB;AACwB;AAC3C,oBAAoB;AACqC;AACzD,aAAa;AACoC;AAYjD;IAmBE,gCACS,UAAsB,EACtB,aAA4B,EAC5B,MAAsB,EACtB,MAAc,EACb,MAAqB,EACrB,KAAe;QANzB,iBAQK;QAPI,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAU;QAqBlB,gBAAW,GAAG,UAAC,IAAI;YACxB,KAAI,CAAC,YAAY,GAAG,IAAI;QAC1B,CAAC;QA+GM,gBAAW,GAAG;YACnB,EAAE,EAAC,KAAI,CAAC,SAAS,CAAC,EAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,oCAAoC;gBACrF,UAAC,WAAW;oBACV,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC;wBACrC,KAAI,CAAC,QAAQ,GAAG,EAAE;wBAClB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACjD,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BAChF,EAAE,EAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;gCACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC7B,CAAC;wBACL,CAAC;wBAEC,iDAAiD;wBACjD,4BAA4B;oBAE9B,CAAC;oBACD,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;oBAClD,CAAC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBAC5C,CAAC,CACF,CAAC,gBAAe;YAEnB,CAAC,SAAQ;YACT,IAAI,EAAC;gBACH,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAExC,CAAC;QAGL,CAAC,mBAAiB;QAGhB,4BAA4B;QAE5B,UAAU;QAEH,wBAAmB,GAAQ,UAAC,IAAI;YACrC,yDAAyD;YACzD,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,2BAAyB;QAEnB,iCAA4B,GAAQ;YACzC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACrD,CAAC;IArLG,CAAC;IAEL,yCAAQ,GAAR;QAEE,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,8DAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,2BAA2B,EAAE;QAE7D,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,EAAC;YAClC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAC3D,CAAC;IAEH,CAAC;IAMM,mDAAkB,GAAzB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC1D,CAAC,sCAAoC;IAE9B,6CAAY,GAAnB,UAAoB,SAAa,EAAE,OAAW;QAE5C,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5B,EAAE,EAAC,GAAG,GAAG,KAAK,CAAC,EAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,EAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IAEH,CAAC,oBAAkB;IAGZ,oDAAmB,GAA1B,UAA2B,SAAa;QAEtC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,GAAG,GAAS,IAAI,IAAI,EAAE,CAAC;QAE3B,EAAE,EAAC,GAAG,GAAG,KAAK,CAAC,EAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,EAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IAEH,CAAC,oBAAkB;IAEZ,sDAAqB,GAA5B;QAAA,iBAyEC;QAvED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;QACzD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;QAC7D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;QAC7D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,UAAU,CAAC,CAAC;QAC/D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,EAAE,UAAU,CAAC,CAAC;QACpF,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6CAA6C,EAAE,UAAU,CAAC,CAAC;QACjF,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,MAAI,GAAG;gBACT,YAAY,EAAE,IAAI,CAAC,OAAO;gBAC1B,MAAM,EAAE,IAAI,CAAC,UAAU;gBACvB,QAAQ,EAAC,IAAI,CAAC,YAAY;gBAC1B,aAAa,EAAC,IAAI,CAAC,YAAY,CAAC,MAAM;gBACtC,eAAe,EAAC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ;gBAC9E,gBAAgB,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK;gBACxC,gBAAgB,EAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC1C,cAAc,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACtC,kBAAkB,EAAC,IAAI,CAAC,WAAW;gBACnC,YAAY,EAAC,IAAI,CAAC,KAAK;gBACvB,SAAS,EAAC,IAAI,CAAC,SAAS;aACzB;YAED,OAAO,CAAC,GAAG,CAAC,MAAI,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAI,CAAC,CAAC,SAAS,CAAC,UAAC,WAAW;gBAEnD,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,+BAA+B,EAAE,mBAAmB,CAAC,CAAC;oBAE1E,IAAI,aAAa,GAAG;wBAClB,OAAO,EAAE,eAAa,MAAI,CAAC,QAAQ,uEAAoE;wBACvG,MAAM,EAAC,MAAI,CAAC,aAAa;qBAC1B;oBAED,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;oBACxC,UAAU,CAAC;wBACT,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,EAAE,IAAI,CAAC,CAAC,sCAAqC;gBAEhD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EACC,UAAC,KAAK;gBACJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,gCAAgC,CAAC,CAAC;gBACnF,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YACL,CAAC,CAAC,CAAC,yBAAwB;QAC/B,CAAC;IACD,CAAC,2BAAyB;IA3JC;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,yDAAW;gEAAM;IAD/C,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;YAG9B,aAAa,EAAE,+DAAiB,CAAC,MAAM;SACxC,CAAC;yCAqBqB,uDAAU;YACP,6DAAa;YACpB,8DAAc;YACd,sDAAM;YACL,wDAAa;YACd,sFAAQ;OAzBd,sBAAsB,CAmNlC;IAAD,6BAAC;CAAA;AAnNkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBM;AACM;AACoC;AACA;AAEhB;AACW;AACC;AACrB;AAEM;AAER;AACK;AAkB7D;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAhBzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,4DAAY;gBACZ,0DAAW;gBACX,kEAAiB;gBACjB,wEAAuB;gBACvB,6EAAiB,CAAC,OAAO,EAAE;gBAC3B,qEAAmB;gBACnB,0EAAc,CAAC,OAAO,EAAE;aAGzB;YACD,YAAY,EAAE,CAAC,+FAAsB,EAAE,+FAAsB,CAAC;SAC/D,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/B1B,mB;;;;;;;;;;;ACAA,ogBAAogB,qNAAqN,iCAAiC,2qEAA2qE,cAAc,wuG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj4F;AAEH;AACM;AAErD,mBAAmB;AACwB;AAC3C,oBAAoB;AACqC;AACzD,aAAa;AACoC;AASjD;IAmBE,gCACS,UAAsB,EACtB,aAA4B,EAC5B,MAAsB,EACtB,MAAc,EACb,MAAqB;QAL/B,iBAOK;QANI,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QAwDxB,8BAAyB,GAAG,UAAC,SAAS,EAAE,SAAS;YAEtD,KAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,oCAAoC;YACpG,UAAC,WAAW;gBACV,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC;oBACvC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,gBAAgB,CAAC,CAAC;oBAEhE,kCAAkC;oBAClC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,cAAc,CAAC,aAAa;oBACtD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC;oBAChD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC;oBAC1D,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;oBACjE,KAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;oBAC7D,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC;oBAC9C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC;gBAC1D,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC,EACD,UAAC,KAAK;gBACJ,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;gBAC/C,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YACH,CAAC,CACF,CAAC;QACJ,CAAC,mBAAiB;QA0EhB,4BAA4B;QAE9B,UAAU;QAEL,wBAAmB,GAAQ,UAAC,IAAI;YACrC,yDAAyD;YACzD,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEzC,CAAC,2BAAyB;IAxKpB,CAAC;IAEL,yCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,8DAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,8DAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,2BAA2B,EAAE;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAEhE,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,MAAM,CAAC,EAAC;YAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAE;QAClE,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAC3D,CAAC;IAIH,CAAC;IAEM,6CAAY,GAAnB,UAAoB,SAAa,EAAE,OAAW;QAE5C,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5B,EAAE,EAAC,GAAG,GAAG,KAAK,CAAC,EAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,EAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IAEH,CAAC,oBAAkB;IAGZ,oDAAmB,GAA1B,UAA2B,SAAa;QAEtC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,GAAG,GAAS,IAAI,IAAI,EAAE,CAAC;QAE3B,EAAE,EAAC,GAAG,GAAG,KAAK,CAAC,EAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,EAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IAEH,CAAC,oBAAkB;IAEZ,mDAAkB,GAAzB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC1D,CAAC,sCAAoC;IAqC9B,sDAAqB,GAA5B;QAAA,iBAqEG;QAnED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;QACzD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;QAC7D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,UAAU,CAAC,CAAC;QAC/D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAgD,EAAE,UAAU,CAAC,CAAC;QACpF,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6CAA6C,EAAE,UAAU,CAAC,CAAC;QACjF,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,MAAI,GAAG;gBACT,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,YAAY,EAAE,IAAI,CAAC,OAAO;gBAC1B,kBAAkB,EAAC,IAAI,CAAC,WAAW;gBACnC,gBAAgB,EAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC1C,cAAc,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACtC,YAAY,EAAC,IAAI,CAAC,KAAK;gBACvB,SAAS,EAAC,IAAI,CAAC,SAAS;aACzB;YAED,OAAO,CAAC,GAAG,CAAC,MAAI,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAI,CAAC;iBAChC,SAAS,CAAC,UAAC,WAAW;gBAErB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8CAA8C,EAAE,qBAAqB,CAAC,CAAC;oBAG3F,IAAI,aAAa,GAAG;wBAClB,OAAO,EAAE,SAAO,KAAI,CAAC,YAAY,sCAAiC,MAAI,CAAC,YAAY,uCAAoC;wBACvH,MAAM,EAAC,KAAI,CAAC,aAAa;qBAC1B;oBAED,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;oBAExC,UAAU,CAAC;wBACT,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,EAAE,IAAI,CAAC,CAAC,sCAAqC;gBAEhD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EACC,UAAC,KAAK;gBACJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,gCAAgC,CAAC,CAAC;gBACnF,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YACL,CAAC,CAAC,CAAC,4BAA2B;QAClC,CAAC;IACD,CAAC,8BAA4B;IAxLpB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAqBqB,uDAAU;YACP,6DAAa;YACpB,8DAAc;YACd,sDAAM;YACL,wDAAa;OAxBpB,sBAAsB,CAoMlC;IAAD,6BAAC;CAAA;AApMkC;;;;;;;;;;;;ACnBnC,8BAA8B,0EAA0E,KAAK,S;;;;;;;;;;;ACA7G,y+B;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAClD,mBAAmB;AACwB;AAO3C;IAEE,+BACU,QAAkB;QAD5B,iBAEK;QADK,aAAQ,GAAR,QAAQ,CAAU;QAKrB,WAAM,GAAG;YACd,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC;IANG,CAAC;IAEL,wCAAQ,GAAR;IACA,CAAC;IAPU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAIoB,wDAAQ;OAHjB,qBAAqB,CAYjC;IAAD,4BAAC;CAAA;AAZiC;;;;;;;;;;;;ACTlC,8BAA8B,0EAA0E,KAAK,eAAe,wBAAwB,KAAK,K;;;;;;;;;;;ACAzJ,u+B;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAOzC;IAEE,8BACS,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAEnB,CAAC;IAEE,yCAAU,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC,4BAA0B;IAE3B,uCAAQ,GAAR;IACA,CAAC;IAZU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAIiB,sDAAM;OAHZ,oBAAoB,CAchC;IAAD,2BAAC;CAAA;AAdgC;;;;;;;;;;;;ACRjC,yBAAyB,0BAA0B,uBAAuB,mBAAmB,yBAAyB,kBAAkB,iBAAiB,kBAAkB,kBAAkB,gCAAgC,KAAK,C;;;;;;;;;;;ACAlO,uKAAuK,WAAW,W;;;;;;;;;;;;;;;;;;;;;;;;ACAzE;AAOzG;IALA;QAYU,UAAK,GAAU,EAAE,CAAC;QAG1B,WAAM,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAqB5D,CAAC;IAjBC,qCAAQ,GAAR;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnC,CAAC,EAAC,eAAe;IAGjB,wCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,IAAI,GAAI,OAAO,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAGD,wCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IA5BQ;QAAR,2DAAK,EAAE;;wDAAkB;IACjB;QAAR,2DAAK,EAAE;;sDAAgB;IACf;QAAR,2DAAK,EAAE;;yDAAmB;IAM3B;QADC,4DAAM,EAAE;kCACD,0DAAY;sDAAsC;IAV/C,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;OACW,kBAAkB,CA+B9B;IAAD,yBAAC;CAAA;AA/B8B;;;;;;;;;;;;ACP/B,sBAAsB,oBAAoB,qBAAqB,0CAA0C,wCAAwC,OAAO,O;;;;;;;;;;;ACAxJ,yF;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACP7B,mB;;;;;;;;;;;ACAA,i/B;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;;;SAGnB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACM;AACF;AACU;AAGgB;AACZ;AACM;AAgBjE;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAdxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY;aACb;YACD,YAAY,EAAE,CAAE,mFAAkB,EAAE,uEAAc,EAAE,6EAAgB,CAAC;YACrE,OAAO,EAAE;gBACP,mFAAkB;gBAClB,uEAAc;gBACd,6EAAgB;gBAChB,4DAAY;gBACZ,0DAAW;aACZ;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBkB;AAE3C,gCAAgC;AACgF;AAC9E;AAEK;AAMvC;IAIE,uBAAoB,KAAiB;QAArC,iBAKC;QALmB,UAAK,GAAL,KAAK,CAAY;QAH9B,YAAO,GAAG,uBAAuB,CAAC;QAUvC,8BAA8B;QACvB,eAAU,GAAG;YAClB,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAC,UAAC,QAAQ;gBAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,IAAI;oBAChC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,YAAW;YAChB,CAAC,CAAC,CAAC,iBAAgB;QACrB,CAAC,kBAAgB;QAEV,mBAAc,GAAG;YACtB,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAC,UAAC,QAAQ;gBAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,QAAQ;oBAC1C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC,gBAAe;YACpB,CAAC,CAAC,CAAC,iBAAgB;QAErB,CAAC,sBAAoB;QAEd,eAAU,GAAG;YAClB,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAC,UAAC,QAAQ;gBAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;oBAC3B,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC,gBAAe;YACpB,CAAC,CAAC,CAAC,iBAAgB;QAErB,CAAC,kBAAgB;QAEV,oBAAe,GAAG;YACvB,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAC,UAAC,QAAQ;gBAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,IAAI;oBAChC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,CAAC,aAAa;YACnB,CAAC,CAAC,CAAC,CAAC,iBAAiB;QACvB,CAAC,EAAC,sBAAsB;QAEjB,wBAAmB,GAAG,UAAC,MAAM;YAClC,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAC,UAAC,QAAQ;gBAChC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAI;oBAC1B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,CAAC,aAAa;YACnB,CAAC,CAAC,CAAC,CAAC,iBAAiB;QACvB,CAAC,EAAC,0BAA0B;QAE5B,+BAA+B;QAG1B,YAAO,GAAG,UAAC,SAAS;YACzB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC1C,CAAC;QAGM,kBAAa,GAAG,UAAC,IAAI;YAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;QAEM,eAAU,GAAG;YAClB,KAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC,oBAAkB;QAEZ,uBAAkB,GAAG;YAExB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,aAAY;QAEnD,CAAC,0BAAwB;QArEvB,yCAAyC;QACzC,wBAAwB;QACxB,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEjC,CAAC;IATU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU;OAJ1B,aAAa,CA6EzB;IAAD,oBAAC;CAAA;AA7EyB;;;;;;;;;;;;ACZ1B,mB;;;;;;;;;;;ACAA,q5C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAGH;AAC/C,mBAAmB;AACwB;AAC3C,oBAAoB;AACqC;AAOzD;IAGE,iCACS,UAAsB,EACtB,MAAsB,EACtB,MAAc,EACb,MAAqB;QAHtB,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;IAE3B,CAAC;IAEL,0CAAQ,GAAR;IACA,CAAC;IAEM,wDAAsB,GAA7B;QAAA,iBAkCC;QAhCC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB;YAED,qBAAqB;YACrB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC;iBAChC,SAAS,CAAC,UAAC,WAAW;gBAErB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,+CAA+C,CAAC,CAAC;gBAEzF,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EACC,UAAC,KAAK;gBACJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,kBAAkB,CAAC,CAAC;gBACnE,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YAEH,CAAC,CAAC,CAAC,6BAA4B;QACrC,CAAC;IACH,CAAC,uBAAqB;IAhDX,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAKqB,uDAAU;YACd,8DAAc;YACd,sDAAM;YACL,wDAAa;OAPpB,uBAAuB,CAkDnC;IAAD,8BAAC;CAAA;AAlDmC;;;;;;;;;;;;ACdpC,wCAAwC,uBAAuB,2BAA2B,oBAAoB,0BAA0B,wBAAwB,uBAAuB,yBAAyB,KAAK,K;;;;;;;;;;;ACArN,iuD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEH;AAE/C,mBAAmB;AACwB;AAC3C,oBAAoB;AACqC;AAEzD,aAAa;AACoC;AAQjD;IAIE,wBACS,UAAsB,EACtB,MAAsB,EACtB,MAAc,EACb,MAAqB;QAJ/B,iBAMK;QALI,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QAuExB,uBAAkB,GAAQ,UAAC,KAAU;YAE1C,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBAEzB,KAAI,CAAC,cAAc,EAAE,CAAC;YAExB,CAAC;QAEH,CAAC;IA7EG,CAAC;IAEE,2CAAkB,GAAzB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEM,0CAAiB,GAAxB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAEM,uCAAc,GAArB;QAAA,iBA0DC;QAxDC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,IAAI,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;iBACzB,SAAS,CAAC,UAAC,WAAW;gBAErB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAC;oBAGvE,8DAAM,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACpD,8DAAM,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC9D,8DAAM,CAAC,GAAG,CAAC,cAAc,EAAK,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,SAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,QAAU,CAAC,CAAC;oBACjH,KAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAExE,UAAU,CAAC;wBAET,EAAE,EAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,MAAM,CAAC,EAAC;4BACjD,KAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC5B,CAAC;wBAAA,IAAI,EAAC;4BACJ,KAAI,CAAC,iBAAiB,EAAE,CAAC;wBAC3B,CAAC;oBAEH,CAAC,EAAE,IAAI,CAAC,CAAC;gBAEX,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EACC,UAAC,KAAK;gBAEJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;gBACzD,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBAC3B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;gBACxD,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YAEH,CAAC,CAAC,CAAC;QACT,CAAC;IACH,CAAC;IAWD,iCAAQ,GAAR;IACA,CAAC;IA1FU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMqB,uDAAU;YACd,8DAAc;YACd,sDAAM;YACL,wDAAa;OARpB,cAAc,CA+F1B;IAAD,qBAAC;CAAA;AA/F0B;;;;;;;;;;;;AClB3B,mB;;;;;;;;;;;ACAA,q3D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAElD,mBAAmB;AACwB;AAC3C,aAAa;AACkC;AAC/C,aAAa;AAC4C;AAOzD;IAIE,gCACS,UAAsB,EACtB,MAAsB,EACtB,MAAc,EACb,MAAqB;QAHtB,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;IAE3B,CAAC;IAEL,yCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAE9E,CAAC;IAEM,2CAAU,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC,4BAA0B;IAEpB,uDAAsB,GAA7B;QAAA,iBA0CD;QAzCG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,EAAE,UAAU,CAAC,CAAC;QAClE,CAAC;QACD,IAAI,EAAC;YACH,IAAI,IAAI,GAAG;gBACT,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC;iBACjC,SAAS,CAAC,UAAC,WAAW;gBAGrB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;oBACzD,UAAU,CAAC;wBACT,KAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,CAAC,EAAE,IAAI,CAAC,CAAC,6BAA4B;gBAEvC,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EACC,UAAC,KAAK;gBACJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,wCAAwC,CAAC,CAAC;gBAC1F,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEzC,CAAC;YAEH,CAAC,CAAC,CAAC,6BAA4B;QAErC,CAAC;IAEL,CAAC,uBAAqB;IA/DT,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAMqB,uDAAU;YACd,8DAAc;YACd,sDAAM;YACL,wDAAa;OARpB,sBAAsB,CAiElC;IAAD,6BAAC;CAAA;AAjEkC;;;;;;;;;;;;ACdnC,8BAA8B,0EAA0E,KAAK,S;;;;;;;;;;;ACA7G,0vFAA0vF,IAAI,ysFAAysF,cAAc,mUAAmU,aAAa,uFAAuF,GAAG,85B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA70L;AACH;AACJ;AACc;AAQzD;IAiBE,yBACS,UAAsB,EACtB,MAAsB,EACtB,MAAc,EACb,MAAqB;QAHtB,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QARxB,cAAS,GAAU,EAAE,CAAC;IAUzB,CAAC;IAEL,kCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,4BAA4B;IAC9B,CAAC;IAED;;OAEG;IACI,0CAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,wCAAc,GAArB;QAAA,iBAgEC;QA9DC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,UAAU,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC;QAC3D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC;QAC3D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,UAAU,CAAC,CAAC;QAC/D,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;QACzD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QAC1D,CAAC;QACD,IAAI,CAAC,CAAC;YAEJ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;YACrC,CAAC;YACD;;eAEG;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAChD,CAAC;YACD,IAAI,IAAI,GAAG;gBACT,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAK,IAAI,CAAC,WAAW,SAAI,IAAI,CAAC,YAAc;gBACxD,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,aAAa;gBAC5B,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;YAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;iBACzB,SAAS,CAAC,UAAC,WAAW;gBAErB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,+CAA+C,EAAE,4BAA4B,CAAC,CAAC;oBACnG,UAAU,CAAC;wBACT,KAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;gBAEX,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,EACC,UAAC,KAAK;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACT,CAAC;IACH,CAAC;IAGD;;OAEG;IACH,oCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAEvB,CAAC;IAGD;;OAEG;IAEI,2CAAiB,GAAxB;QAEE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IAGD;;OAEG;IAEI,sCAAY,GAAnB;QAAA,iBAgBC;QAfC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE;aAC9B,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnB,IAAI,aAAa,GAAG;oBAClB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;oBACb,IAAI,EAAE,CAAC;iBACR;gBACD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACrC,CAAC;YACD,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,MAAM;gBACjD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpI,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IAEN,CAAC;IAGD;;OAEG;IAEI,yCAAe,GAAtB;QAAA,iBAKC;QAJC,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;aAChC,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;IAhKU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAoBqB,uDAAU;YACd,8DAAc;YACd,sDAAM;YACL,wDAAa;OArBpB,eAAe,CA8K3B;IAAD,sBAAC;CAAA;AA9K2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACM;AACQ;AACY;AACZ;AAGE;AACG;AAC0B;AACT;AACM;AAYnF;IAAA;IAA0B,CAAC;IAAd,UAAU;QATtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY;gBACZ,kEAAY;aACb;YACD,YAAY,EAAE,CAAC,qEAAc,EAAE,wEAAe,EAAE,kGAAuB,EAAE,yFAAoB,EAAE,+FAAsB,CAAC;SACvH,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBvB,yHAAyH,sBAAsB,oCAAoC,KAAK,C;;;;;;;;;;;ACAxL,4U;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAElD,mBAAmB;AACwB;AAC3C,aAAa;AACkC;AAC/C,aAAa;AAC4C;AAQzD;IAIE,8BACS,UAAsB,EACtB,MAAsB,EACtB,MAAc,EACb,MAAqB;QAHtB,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;IAE3B,CAAC;IAEL,uCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAI,CAAC,mBAAmB,EAAE;IAC5B,CAAC;IAEM,kDAAmB,GAA1B;QAAA,iBAwBC;QAtBG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;aACrC,SAAS,CAAC,UAAC,WAAW;YAErB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;YACzD,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YACnD,CAAC;QACH,CAAC,EACC,UAAC,KAAK;YACJ,EAAE,EAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,EAAC;gBACtB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,iBAAiB,CAAC,CAAC;YACtE,CAAC;YACD,IAAI,EAAC;gBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAEzC,CAAC;QAEH,CAAC,CAAC,CAAC,6BAA4B;IAEvC,CAAC,uBAAqB;IAzCX,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAMqB,uDAAU;YACd,8DAAc;YACd,sDAAM;YACL,wDAAa;OARpB,oBAAoB,CA2ChC;IAAD,2BAAC;CAAA;AA3CgC;;;;;;;;;;;;;;ACfjC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXlC,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport {RouterModule ,Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { SignupComponent } from './user/signup/signup.component';\nimport { ForgotPasswordComponent } from './user/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './user/verify-email/verify-email.component';\nimport { ResetPasswordComponent } from './user/reset-password/reset-password.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { CreateMeetingComponent } from './meeting/create-meeting/create-meeting.component';\nimport { UpdateMeetingComponent } from './meeting/update-meeting/update-meeting.component';\nimport { AdminDashboardComponent } from './dashboard/admin-dashboard/admin-dashboard.component';\nimport { UserDashboardComponent } from './dashboard/user-dashboard/user-dashboard.component';\n\n\nconst routes: Routes = [\n  {path :'user/login',component:LoginComponent},\n  {path :'user/signup',component:SignupComponent},\n  {path :'user/forgot-password', component:ForgotPasswordComponent},\n  {path :'user/verify-email/:userId', component:VerifyEmailComponent},\n  {path :'user/reset-password/:validationToken', component:ResetPasswordComponent},\n  {path :'user/normal/meeting/dashboard',component:UserDashboardComponent},\n\n\n  {path :'user/admin/meeting/create',component:CreateMeetingComponent},\n  {path :'user/admin/meeting/update/:meetingId',component:UpdateMeetingComponent},\n  {path :'user/admin/meeting/dashboard',component:AdminDashboardComponent},\n\n\n  {path :'serverError', component:ServerErrorComponent},\n  {path : '', redirectTo:'user/login',pathMatch:'full'},\n  {path :'*',component:PageNotFoundComponent},\n  {path :'**',component:PageNotFoundComponent}\n\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes) ,\n\n  ],\n  exports:[\n    RouterModule\n  ],\n\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n.footer-text {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  font-size: 12px;\\r\\n}\\r\\n.copyright-text-wrap {\\r\\n  background: #55cdb7;\\r\\n  color: #fff;\\r\\n  padding: 5px 0px;\\r\\n}\\r\\n\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n<footer class=\\\"copyright-text-wrap\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n                <div class=\\\"footer-text\\\">\\r\\n                        <div class=\\\"design-develop-text\\\">\\r\\n                                Design & Developed by Jaspreet Kaur\\r\\n                        </div>\\r\\n                        <div class=\\\"copyright-text\\\">\\r\\n\\r\\n                                © 2019 Copyright Meeting Planner\\r\\n                        </div>\\r\\n                </div>\\r\\n        </div>\\r\\n</footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Meeting Planner';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { UserModule } from './user/user.module'\nimport { AppRoutingModule } from './app-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MeetingModule } from './meeting/meeting.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { LoginComponent } from './user/login/login.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    ServerErrorComponent  \n  ],\n  imports: [\n    BrowserModule,\n    UserModule,\n    MeetingModule,\n    DashboardModule,\n    AppRoutingModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      timeOut: 10000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams} from '@angular/common/http';\nimport { HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  public baseUrl = \"http://localhost:3000/api/v1\";\n \n  constructor(private _http: HttpClient) { }\n\n/* Start Functions for User Management */\n\n  public signUp(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobileNumber', data.mobileNumber)\n      .set('email', data.email)\n      .set('password', data.password)\n      .set('userName',data.userName)\n      .set('countryName',data.countryName)\n      .set('isAdmin',data.isAdmin);\n\n    return this._http.post(`${this.baseUrl}/users/signup`, params);\n  }//end signUp\n\n  public signIn(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password)\n\n    return this._http.post(`${this.baseUrl}/users/login`, params);\n  }//end signIn\n\n  public resetPassword(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('email', data.email)\n\n    return this._http.post(`${this.baseUrl}/users/resetPassword`, params);\n  }//end resetPassword\n\n  public updatePassword(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('validationToken', data.validationToken)\n      .set('password', data.password)\n\n    return this._http.put(`${this.baseUrl}/users/updatePassword`, params);\n  }//end updatePassword\n\n  public verifyEmail(userId): Observable<any>{\n\n    const params = new HttpParams()\n      .set('userId', userId)\n\n    return this._http.put(`${this.baseUrl}/users/verifyEmail`, params);\n  }//end verifyEmail\n  \n  public getCountryNames(): Observable<any> {\n\n    return this._http.get(\"./../assets/json/countryNames.json\");\n\n  }//end getCountryNames\n\n \n  public getCountryNumbers(): Observable<any> {\n\n    return this._http.get(\"./../assets/json/countryPhoneCodes.json\");\n    \n  }//end getCountryNumbers\n\n  public getUsers(authToken): Observable<any> {\n    \n    return this._http.get(`${this.baseUrl}/users/view/all?authToken=${authToken}`);\n  }//end getUsers function\n\n  public setUserInfoInLocalStorage = (data) => {\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }//end of setlocalstorage Function\n\n  public getUserInfoFromLocalStorage: any = () => {\n    return JSON.parse(localStorage.getItem('userInfo'));\n  }//end getlocalstorage function\n\n  public logout(userId,authToken): Observable<any>{\n\n    const params = new HttpParams()\n      .set('authToken',authToken)\n\n    return this._http.post(`${this.baseUrl}/users/${userId}/logout`, params);\n  }//end deleteMeeting\n\n/* End User Management Functions */\n\n\n/* Start Meeting Management Functions */\n\n  public addMeeting(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('meetingTopic', data.meetingTopic)\n      .set('hostId', data.hostId)\n      .set('hostName', data.hostName)\n      .set('participantId', data.participantId)\n      .set('participantName', data.participantName)\n      .set('participantEmail',data.participantEmail)\n      .set('meetingStartDate',data.meetingStartDate)\n      .set('meetingEndDate',data.meetingEndDate)\n      .set('meetingDescription',data.meetingDescription)\n      .set('meetingPlace',data.meetingPlace)\n      .set('authToken',data.authToken)\n\n    return this._http.post(`${this.baseUrl}/meetings/addMeeting`, params);\n  }//end addMeeting\n\n  public getMeetingDetails(meetingId,authToken): Observable<any> {    \n    return this._http.get(`${this.baseUrl}/meetings/${meetingId}/details?authToken=${authToken}`);\n  }//end getUsers function\n\n  public updateMeeting(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('meetingTopic', data.meetingTopic)\n      .set('meetingStartDate',data.meetingStartDate)\n      .set('meetingEndDate',data.meetingEndDate)\n      .set('meetingDescription',data.meetingDescription)\n      .set('meetingPlace',data.meetingPlace)\n      .set('authToken',data.authToken)\n  \n    return this._http.put(`${this.baseUrl}/meetings/${data.meetingId}/updateMeeting`, params);\n  }//end addMeeting\n  \n  \n  public getUserAllMeeting(userId,authToken): Observable<any> {\n    \n    return this._http.get(`${this.baseUrl}/meetings/view/all/meetings/${userId}?authToken=${authToken}`);\n  }//end getUsers function\n\n  public deleteMeeting(meetingId,authToken): Observable<any>{\n\n    const params = new HttpParams()\n      .set('authToken',authToken)\n\n    return this._http.post(`${this.baseUrl}/meetings/${meetingId}/delete`, params);\n  }//end deleteMeeting\n\n  public sentMeetingReminders(userId,authToken): Observable<any>{\n\n    const params = new HttpParams()\n      .set('userId', userId)\n      .set('authToken', authToken)\n\n    return this._http.post(`${this.baseUrl}/meetings/admin-meetings/sentReminders`, params);\n  }//end signIn\n\n}\n","module.exports = \".btn-circle {\\r\\n  width: 30px;\\r\\n  height: 30px;\\r\\n  text-align: center;\\r\\n  padding: 6px 0;\\r\\n  font-size: 12px;\\r\\n  line-height: 1.42;\\r\\n  border-radius: 15px;\\r\\n}\\r\\n\\r\\n.btn-circle.btn-lg {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    padding: 10px 16px;\\r\\n    font-size: 18px;\\r\\n    line-height: 1.33;\\r\\n    border-radius: 25px;\\r\\n  }\\r\\n\\r\\n.online{\\r\\n\\r\\n    height: 10px;\\r\\n    width: 10px;\\r\\n    background-color:#38b4b9;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n\\r\\n.offline{\\r\\n  \\r\\n    height: 10px;\\r\\n    width: 10px;\\r\\n    /* background-color:red; */\\r\\n    border-radius: 50%;  \\r\\n    display: inline-block;\\r\\n  }\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Details</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n\\n        <div class=\\\"card\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Topic </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingTopic}} by {{modalData?.event.hostName}}</h6>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Topic Description </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingDescription}}</h6>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Participant </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.participantName}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Date and Time</h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingStartDate | date: 'medium'}} -\\n                  {{modalData?.event.meetingEndDate\\n                  | date: 'medium'}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Location </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingPlace}}</h6>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #modalConfirmation let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Delete Meeting</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <h6 class=\\\"card-title\\\">Are you sure you want to delete the following meeting?</h6>\\n    <h4 class=\\\"card-title\\\">{{modalData?.event.meetingTopic}}</h4>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn btn-danger\\\" (click)=\\\"deleteEvent(modalData?.event);close()\\\">Delete</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">Cancel</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #modalAlert let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Reminder</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <h6 class=\\\"card-title\\\">Your meeting <span>{{modalData?.event.meetingTopic}}</span> will start soon!</h6>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\"\\n      (click)=\\\"modalData?.event.remindMe=true;gentleReminder=true;close()\\\">Snooze</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\"\\n      (click)=\\\"modalData?.event.remindMe=false;gentleReminder=true;close()\\\">Dismiss</button>\\n  </div>\\n</ng-template>\\n<div class=\\\"dashboard-wrapper\\\">\\n  <div class=\\\"header-wrapper text-center border-bottom border-info\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col-sm-12 col-md-2 col-lg-3 own-navbar\\\">\\n          <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner Logo\\\" />\\n        </div>\\n        <div class=\\\"calendar-btn col-sm-6 col-md-4 col-lg-4 own-navbar\\\">\\n          <div class=\\\"btn-group\\\">\\n            <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarPreviousView\\n              [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n              <span class=\\\"fas fa-angle-left\\\"></span>\\n            </button>\\n            <span class=\\\"calendarText\\\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</span>\\n            <button style=\\\"margin-left: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarNextView\\n              [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n              <span class=\\\"fas fa-angle-right\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-6 col-md-3 col-lg-3 own-navbar\\\">\\n          <div class=\\\"btn-group\\\">\\n            <button  type=\\\"button\\\" class=\\\"btn btn-light current-day\\\" mwlCalendarToday\\n              [(viewDate)]=\\\"viewDate\\\">\\n              Today\\n            </button>\\n\\n            <select [(ngModel)]=\\\"view\\\" name=\\\"view\\\" class=\\\"form-control yearbtn\\\">\\n              <option value=\\\"month\\\">Month</option>\\n              <option value=\\\"week\\\">Week</option>\\n              <option value=\\\"day\\\">Day</option>\\n            </select>\\n\\n          </div>\\n\\n\\n        </div>\\n\\n        <div class=\\\"admin-info-btns col-sm-12 col-md-3 col-lg-2 own-navbar\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"float: right;\\\">\\n            <button id=\\\"btnGroupDropUserInfo\\\" type=\\\"button\\\" class=\\\"btn btn-outline-info rounded\\\" data-toggle=\\\"dropdown\\\"\\n              aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{adminName ? adminName : 'Admin'}}\\n            </button>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"btnGroupDropUserInfo\\\">\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"getAdminMeetings(adminId)\\\">Home</a>\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"sentMeetingRemindersonEmailFunction()\\\">Send Reminders for Todays\\n                Meeting</a>\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"logoutFunction(adminId)\\\">Sign Out</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"dashboard-body-wrap\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"d-block d-sm-block d-md-none col-md-4 border border-info\\\">\\n      \\n\\n          <nav class=\\\"navbar navbar-expand-lg navbar-light \\\" style=\\\"background-color: #f5f5f5\\\">\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo03\\\"\\n              aria-controls=\\\"navbarTogglerDemo03\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n\\n            <a class=\\\"navbar-brand h1\\\">Users of Meeting Planner</a>\\n          </nav>\\n\\n          <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo03\\\">\\n            <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n              <li class=\\\"nav-item own-navbar\\\">\\n                <input type=\\\"text\\\" id=\\\"inputUserName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"Search User Name\\\">\\n              </li>\\n\\n              <li class=\\\"nav-item own-navbar\\\">\\n                <div class=\\\"\\\" *ngFor=\\\"let user of allUsersData | filter:userName\\\">\\n\\n                  <a (click)=\\\"getUserMeetings(user.userId)\\\" class=\\\"list-group-item list-group-item-action\\\"\\n                    *ngIf=\\\"user.userId != adminId\\\">\\n                    <span>{{user.firstName}}\\n                      {{user.lastName}}\\n                    </span>\\n\\n                    <span *ngIf=\\\"user.status == 'online'\\\"><i class=\\\"online\\\"></i></span>\\n                   \\n\\n                  </a>\\n                </div>\\n              </li>\\n\\n            </ul>\\n          </div>\\n\\n\\n\\n        </div>\\n\\n        <div class=\\\"desktop-user-lists d-none d-sm-none d-md-block col-md-3 border border-info\\\">\\n        \\n          <input type=\\\"text\\\" id=\\\"inputUserName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Search For User Name\\\">\\n          <div class=\\\"people-list\\\">\\n            <div class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let user of allUsersData | filter:userName\\\">\\n\\n              <a (click)=\\\"getUserMeetings(user.userId,user.firstName + ' ' +user.lastName)\\\"\\n                class=\\\"list-group-item list-group-item-action\\\" *ngIf=\\\"user.userId != adminId\\\">\\n                <span>{{user.firstName}}\\n                  {{user.lastName}}\\n                </span>\\n\\n                <span *ngIf=\\\"user.status == 'online'\\\"><i class=\\\"online\\\"></i></span>\\n                <span *ngIf=\\\"user.status != 'online'\\\"><i class=\\\"offline\\\"></i></span>\\n\\n              </a>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"user-meeting-info col-sm-12 col-md-9 border border-info\\\">\\n\\n        \\n\\n          <div [ngSwitch]=\\\"view\\\" class=\\\"main-calendar-wrapper\\\" style=\\\"height:82vh;overflow-y:auto\\\">\\n            <mwl-calendar-month-view *ngSwitchCase=\\\"'month'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\"\\n              [activeDayIsOpen]=\\\"activeDayIsOpen\\\" (dayClicked)=\\\"dayClicked($event.day)\\\"\\n              (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n            </mwl-calendar-month-view>\\n\\n            <mwl-calendar-week-view *ngSwitchCase=\\\"'week'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\"\\n              (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n            </mwl-calendar-week-view>\\n\\n            <mwl-calendar-day-view *ngSwitchCase=\\\"'day'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\"\\n              (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n            </mwl-calendar-day-view>\\n\\n          </div>\\n\\n          <div class=\\\"fixed-bottom\\\">\\n            <div style=\\\"float: right;\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-circle btn-lg\\\" (click)=\\\"goToAddMeeting()\\\">\\n                <span class=\\\"fas fa-plus\\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { isSameDay, isSameMonth } from 'date-fns';\n\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent } from 'angular-calendar';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap/modal/modal.module';\n\nimport { Subject } from 'rxjs';\n\nimport { AppService } from '../../app.service';\nimport { SocketService } from '../../socket.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\nconst colors: any = {\n  green: {\n    primary: '#008000',\n    secondary: '#FAE3E3'\n  }\n};\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\n\n\n\nexport class AdminDashboardComponent implements OnInit {\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\n  @ViewChild('modalConfirmation') modalConfirmation: TemplateRef<any>;\n  @ViewChild('modalAlert') modalAlert: TemplateRef<any>;\n\n  view: string = 'month';\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fas fa-pencil-alt\"></i>       ',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fas fa-trash-alt\"></i>        ',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n  activeDayIsOpen: boolean = false;\n\n  public selectedUser: any;\n  public allUsers: any[];\n  public allUsersData: any[];\n  public userInfo: any;\n  public authToken: any;\n  public receiverId: any;\n  public receiverName: any;\n  public adminId: any;\n  public adminName: any;\n  public userName: any; \n\n  public onlineUserList: any = []\n  public meetings: any = [];\n  public events: CalendarEvent[] = [];\n\n  public gentleReminder: Boolean = true;\n\n\n  constructor(\n    public appService: AppService,\n    public socketService: SocketService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n    private modal: NgbModal,\n\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.authToken = Cookie.get('authToken');\n    this.receiverId = Cookie.get('receiverId');\n    this.receiverName = Cookie.get('receiverName');\n    this.userInfo = this.appService.getUserInfoFromLocalStorage()\n    this.adminId = Cookie.get('receiverId');\n    this.adminName = Cookie.get('receiverName');\n    \n    //console.log(this.userInfo)\n    if(this.userInfo.isAdmin == 'true'){\n      this.verifyUserConfirmation()\n      this.getOnlineUserList()\n      this.getAllUsers();\n  \n      this.getUserAllMeetingFunction()\n      this.authErrorFunction()      \n    }\n    else{\n      this.router.navigate(['/user/normal/meeting/dashboard']);      \n    }\n\n    setInterval(() => {\n      this.meetingReminder();\n    }, 5000); \n\n  }\n\n\n  /* Calendar Events */\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n     \n      this.viewDate = date;\n      if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\n        this.activeDayIsOpen = false;\n      } else {\n       \n        this.view = 'day'\n      }\n    }\n  }\n\n\n  eventTimesChanged({ event, newStart, newEnd }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: any): void {\n    \n\n    if (action === 'Edited') {\n      this.router.navigate([`/user/admin/meeting/update/${event.meetingId}`]);\n    }\n\n    else if (action === 'Deleted') {\n      console.log(action === 'Deleted')\n\n      this.modalData = { event, action };\n      this.modal.open(this.modalConfirmation, { size: 'sm' });\n\n    }\n    else {\n      this.modalData = { event, action };\n      this.modal.open(this.modalContent, { size: 'lg' });\n    }\n  }\n\n  deleteEvent(event: any): void {\n    \n\n    this.deleteMeetingFunction(event);\n\n    this.events = this.events.filter(iEvent => iEvent !== event);\n    this.refresh.next();\n    this.activeDayIsOpen = false;\n  }\n\n/* End Calendar Events */\n\n  public goToAddMeeting(): any {\n    this.router.navigate(['/user/admin/meeting/create']);\n  }\n\n \n  public meetingReminder(): any {\n    let currentTime = new Date().getTime();\n    \n    for (let meetingEvent of this.meetings) {\n\n      if (isSameDay(new Date(), meetingEvent.start) && new Date(meetingEvent.start).getTime() - currentTime <= 60000\n        && new Date(meetingEvent.start).getTime() > currentTime) {\n        if (meetingEvent.remindMe && this.gentleReminder) {\n\n          this.modalData = { action: 'clicked', event: meetingEvent };\n          this.modal.open(this.modalAlert, { size: 'sm' });\n          this.gentleReminder = false\n          break;\n        }//end inner if\n\n      }//end if\n      else if(currentTime > new Date(meetingEvent.start).getTime() && \n      new Date(currentTime - meetingEvent.start).getTime()  < 10000){\n        this.toastr.info(`Meeting ${meetingEvent.meetingTopic} Started!`, `Gentle Reminder`);\n      }  \n    }\n\n  }//end of meetingReminder function\n\n\n  /* Data base functions */\n\n  public getUserMeetings(userId,userName): any { //get meetings of clicked user ; \n    this.receiverId = userId\n    this.receiverName = userName\n    this.getUserAllMeetingFunction()\n  }//end of getUserMeetings function\n\n  public getAdminMeetings(userId): any { //get meetings of admin\n    this.receiverId = userId\n    this.receiverName = this.adminName\n    this.getUserAllMeetingFunction()\n  }//end of getAdminMeetings function\n\n  public getAllUsers = () => {//this function will get all the normal users from database. \n\n    if (this.authToken != null) {\n      this.appService.getUsers(this.authToken).subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.allUsersData = apiResponse.data;\n\n         \n\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"User Update\");\n        }\n      },\n        (error) => {\n          this.toastr.error('Server error occured', \"Error!\");\n          this.router.navigate(['/serverError']);\n\n        }//end error\n      );//end getusers\n\n    }//end if\n    else {\n      this.toastr.info('Missing Authorization key', \"Please login again\");\n      this.router.navigate(['/user/login']);\n\n    }//end else\n\n  }//end getAllUsers\n\n  public sentMeetingRemindersonEmailFunction = () => {//this function will get all the normal users from database. \n\n    if (this.authToken != null && this.adminId != null) {\n      this.appService.sentMeetingReminders(this.adminId,this.authToken).subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.toastr.info(\"Meeting Reminders sent\", \"Update\");\n\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          this.toastr.error('Server error occured', \"Error!\");\n          this.router.navigate(['/serverError']);\n\n        }//end error\n      );//end sentreminders\n\n    }//end if\n    else {\n      this.toastr.info('Missing Authorization key', \"Please login again\");\n      this.router.navigate(['/user/login']);\n\n    }//end else\n\n  }//end sentRemindersFunction\n \n  public getUserAllMeetingFunction = () => {//this function will get all the meetings of User. \n    \n    if (this.receiverId != null && this.authToken != null) {\n      this.appService.getUserAllMeeting(this.receiverId, this.authToken).subscribe((apiResponse) => {\n        if (apiResponse.status == 200) {\n\n          this.meetings = apiResponse.data;\n\n          //console.log(this.meetings)\n          for (let meetingEvent of this.meetings) {\n            meetingEvent.title = meetingEvent.meetingTopic;\n            meetingEvent.start = new Date(meetingEvent.meetingStartDate);\n            meetingEvent.end = new Date(meetingEvent.meetingEndDate);\n            meetingEvent.color = colors.green;\n            meetingEvent.actions = this.actions\n            meetingEvent.remindMe = true\n            \n          }\n          this.events = this.meetings;\n          //console.log(this.events)\n          this.refresh.next();\n\n          this.toastr.info(\"Calendar Updated\", `Meetings Found!`);\n          //console.log(this.events)\n\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n          this.events = [];\n        }\n      },\n        (error) => {\n          if (error.status == 400) {\n            this.toastr.warning(\"Calendar Failed to Update\", \"Either user or Meeting not found\");\n            this.events = []\n          }\n          else {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate(['/serverError']);\n\n          }\n        }//end error\n      );//end appservice.getuserallmeeting\n\n    }//end if\n    else {\n      this.toastr.info(\"Missing Authorization Key\", \"Please login again\");\n      this.router.navigate(['/user/login']);\n\n    }\n\n  }//end getUserAllMeetingFunction\n\n\n  public deleteMeetingFunction(meeting): any {\n    this.appService.deleteMeeting(meeting.meetingId, this.authToken)\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Deleted the Meeting\", \"Successfull!\");\n\n          let dataForNotify = {\n            message: `Hi, ${this.receiverName} has canceled the meeting - ${meeting.meetingTopic}. Please Check your Calendar/Email`,\n            userId: meeting.participantId\n          }\n\n          this.notifyUpdatesToUser(dataForNotify);\n\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n\n          if (error.status == 404) {\n            this.toastr.warning(\"Delete Meeting Failed\", \"Meeting Not Found!\");\n          }\n          else {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate(['/serverError']);\n\n          }\n\n        });//end calling deletemeeting\n\n  }//end deletemeeting\n\n  public logoutFunction = (userId) => {\n    this.appService.logout(userId, this.authToken).subscribe(\n      (apiResponse) => {\n        if (apiResponse.status === 200) {\n          \n          Cookie.delete('authToken');//delete all the cookies\n          Cookie.delete('receiverId');\n          Cookie.delete('receiverName');\n          \n          localStorage.clear();\n          \n          this.socketService.disconnectedSocket();//calling the method which emits the disconnect event.\n          this.socketService.exitSocket();//this method will disconnect the socket from frontend and close the connection with the server.\n\n\n          setTimeout(() => {\n            this.router.navigate(['/user/login']);//redirects the user to login page.\n          }, 1000);//redirecting to Dashboard page\n\n\n        } else {\n          this.toastr.error(apiResponse.message, \"Error!\")\n          this.router.navigate(['/serverError']);//in case of error redirects to error page.\n        } // end condition\n      },\n      (err) => {\n        if (err.status == 404) {\n          this.toastr.warning(\"Logout Failed\", \"Already Logged Out or Invalid User\");\n        }\n        else {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          this.router.navigate(['/serverError']);\n\n        }\n      });\n\n  }//end logout  \n\n\n  /* Socket - Event Based Functions */\n\n  //listened\n  public verifyUserConfirmation: any = () => {\n    this.socketService.verifyUser()\n      .subscribe(() => {\n        //console.log(\"In verifys\")\n        this.socketService.setUser(this.authToken);//in reply to verify user emitting set-user event with authToken as parameter.\n\n      });//end subscribe\n  }//end verifyUserConfirmation\n\n  public authErrorFunction: any = () => {\n\n    this.socketService.listenAuthError()\n      .subscribe((data) => {\n        this.toastr.info(\"Missing Authorization Key\", \"Please login again\");\n        this.router.navigate(['/user/login']);\n  \n      });//end subscribe\n  }//end authErrorFunction\n\n  public getOnlineUserList: any = () => {\n    this.socketService.onlineUserList()\n      .subscribe((data) => {\n\n        this.onlineUserList = []\n        for (let x in data) {\n          //let temp = { 'userId': x, 'userName': data[x] };\n          this.onlineUserList.push(x);\n        }\n\n        for (let user of this.allUsersData) {\n\n          if (this.onlineUserList.includes(user.userId)) {\n            user.status = \"online\"\n          } else {\n            user.status = \"offline\"\n          }\n\n        }\n\n      });//end subscribe\n  }//end getOnlineUserList\n\n\n  //emitted \n\n  public notifyUpdatesToUser: any = (data) => {\n    //data will be object with message and userId(recieverId)\n    this.socketService.notifyUpdates(data);\n\n  }//end notifyUpdatesToUser\n\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\n\nimport {SharedModule} from '../shared/shared.module'\n\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport {  NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n@NgModule({\n  imports: [\n    CommonModule, \n    BrowserAnimationsModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n    FormsModule,\n    NgbModalModule.forRoot(),\n    Ng2SearchPipeModule,\n    SharedModule\n\n    \n\n  ],\n  declarations: [AdminDashboardComponent, UserDashboardComponent]\n})\nexport class DashboardModule { }\n","module.exports = \"h3 {\\r\\n    margin: 0 0 10px;\\r\\n  }\\r\\n  \\r\\n  pre {\\r\\n    background-color: #ffffff;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  \\r\\n  .btn-circle {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    text-align: center;\\r\\n    padding: 6px 0;\\r\\n    font-size: 12px;\\r\\n    line-height: 1.42;\\r\\n    border-radius: 15px;\\r\\n  }\\r\\n  \\r\\n  .btn-circle.btn-lg {\\r\\n      width: 50px;\\r\\n      height: 50px;\\r\\n      padding: 10px 16px;\\r\\n      font-size: 18px;\\r\\n      line-height: 1.33;\\r\\n      border-radius: 25px;\\r\\n    }\\r\\n  \\r\\n  .own-navbar{\\r\\n  padding-bottom: 1vh;\\r\\n}\\r\\n    \"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Details</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n\\n        <div class=\\\"card\\\">\\n\\n          <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Topic </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingTopic}} by {{modalData?.event.hostName}}</h6>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Description</h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingDescription}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5> Participant </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.participantName}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Date and Time</h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingStartDate | date: 'medium'}} - {{modalData?.event.meetingEndDate\\n                  | date: 'medium'}}</h6>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <h5>Location </h5>\\n              </div>\\n              <div class=\\\"col-8\\\">\\n                <h6 class=\\\"card-title\\\">{{modalData?.event.meetingPlace}}</h6>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div> \\n  </div>\\n</ng-template>\\n\\n<ng-template #modalAlert let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Reminder</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <h6 class=\\\"card-title\\\">Your meeting <span> {{modalData?.event.meetingTopic}}</span> will start soon!</h6>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"close();remindMe =true\\\">Snooze</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close();remindMe=false\\\">Dismiss</button>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"dashboard-wrapper\\\">\\n  <div class=\\\"header-wrapper text-center border-bottom border-info\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col-sm-12 col-md-2 col-lg-3 own-navbar\\\">\\n          <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner Logo\\\" />\\n        </div>\\n\\n\\n        <div class=\\\"calendar-btn col-sm-6 col-md-4 col-lg-4 own-navbar\\\">\\n          <div class=\\\"btn-group\\\">\\n            <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarPreviousView\\n              [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n              <span class=\\\"fas fa-angle-left\\\"></span>\\n            </button>\\n            <span class=\\\"calendarText\\\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</span>\\n            <button style=\\\"margin-left: 10px;\\\" type=\\\"button\\\" class=\\\"btn btn-light btn-circle\\\" mwlCalendarNextView\\n              [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n              <span class=\\\"fas fa-angle-right\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-6 col-md-3 col-lg-3 own-navbar\\\">\\n          <div class=\\\"btn-group\\\">\\n            <button  type=\\\"button\\\" class=\\\"btn btn-light current-day\\\" mwlCalendarToday\\n              [(viewDate)]=\\\"viewDate\\\">\\n              Today\\n            </button>\\n\\n            <select [(ngModel)]=\\\"view\\\" name=\\\"view\\\" class=\\\"form-control yearbtn\\\">\\n              <option value=\\\"month\\\">Month</option>\\n              <option value=\\\"week\\\">Week</option>\\n              <option value=\\\"day\\\">Day</option>\\n            </select>\\n\\n          </div>\\n\\n\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-3 col-lg-2 own-navbar\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"float: right;\\\">\\n            <button id=\\\"btnGroupDropUserInfo\\\" type=\\\"button\\\" class=\\\"btn btn-outline-info\\\" data-toggle=\\\"dropdown\\\"\\n              aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{receiverName ? receiverName : 'User'}}\\n            </button>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"btnGroupDropUserInfo\\\">\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"logoutFunction()\\\">Sign Out</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"dashboard-body-wrap\\\">\\n   \\n      <div class=\\\"row\\\" style=\\\"margin-left:0px;margin-right:0px;\\\">\\n\\n        <div class=\\\"col-12 border border-info\\\">\\n\\n          <div [ngSwitch]=\\\"view\\\" style=\\\"height:83vh;overflow-y:scroll\\\">\\n            <mwl-calendar-month-view *ngSwitchCase=\\\"'month'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\"\\n              [activeDayIsOpen]=\\\"activeDayIsOpen\\\" (dayClicked)=\\\"dayClicked($event.day)\\\"\\n              (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n            </mwl-calendar-month-view>\\n\\n            <mwl-calendar-week-view *ngSwitchCase=\\\"'week'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\"\\n              (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n            </mwl-calendar-week-view>\\n\\n            <mwl-calendar-day-view *ngSwitchCase=\\\"'day'\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\"\\n              (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n            </mwl-calendar-day-view>\\n\\n          </div>\\n\\n        </div>\\n      </div>\\n   \\n  </div>\\n\\n</div>\"","\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { isSameDay,isSameMonth } from 'date-fns';\n\nimport { CalendarEvent, CalendarEventTimesChangedEvent} from 'angular-calendar';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap/modal/modal.module';\n\nimport { Subject } from 'rxjs';\n\n\nimport { AppService } from '../../app.service';\nimport { SocketService } from '../../socket.service';\n\n\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  },\n\n  green: {\n    primary: '#008000',\n    secondary: '#FDF1BA'\n  }\n\n  \n};\n\n \n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\n\nexport class UserDashboardComponent implements OnInit {\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\n  @ViewChild('modalAlert') modalAlert: TemplateRef<any>;\n\n  view: string = 'month';\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n \n  refresh: Subject<any> = new Subject();\n\n  activeDayIsOpen: boolean = false;\n\n  public userInfo: any;\n  public authToken: any;\n  public receiverId: any;\n  public receiverName: any;\n  public meetings: any = [];\n  public events: CalendarEvent[] = [];\n  public remindMe: any;\n\n\n  constructor(\n    private modal: NgbModal,\n    public appService: AppService,\n    public socketService: SocketService,\n\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n) { }\n\n  ngOnInit() {\n\n    this.authToken = Cookie.get('authToken');\n    this.receiverId = Cookie.get('receiverId');\n    this.receiverName = Cookie.get('receiverName');\n    this.remindMe = true\n \n    this.userInfo = this.appService.getUserInfoFromLocalStorage()\n\n    if(this.userInfo.isAdmin == 'false'){\n\n      this.verifyUserConfirmation()\n      this.authErrorFunction(); \n      this.getUserAllMeetingFunction();\n      this.getUpdatesFromAdmin();\n    }\n    else{\n      this.router.navigate(['/user/normal/meeting/dashboard']);      \n\n    }\n    \n    setInterval(() => {\n      this.meetingReminder();// function to send the reminder to the user\n    }, 5000);//will check for every two minutes\n\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        //this.activeDayIsOpen = true;\n        this.view = 'day'\n      }\n    }\n  }\n\n  eventTimesChanged({event,newStart,newEnd}: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    //console.log(event)\n    this.modalData = { event, action };\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n  public meetingReminder(): any {\n    let currentTime = new Date().getTime();\n    //console.log(this.meetings)\n    for (let meetingEvent of this.meetings) {\n\n      if (isSameDay(new Date(), meetingEvent.start) && new Date(meetingEvent.start).getTime() - currentTime <= 60000\n        && new Date(meetingEvent.start).getTime() > currentTime) {\n        if (meetingEvent.remindMe) {\n\n          this.modalData = { action: 'clicked', event: meetingEvent };\n          this.modal.open(this.modalAlert, { size: 'sm' });\n\n          break;\n        }//end inner if\n\n      }//end if\n      else if(currentTime > new Date(meetingEvent.start).getTime() && \n      new Date(currentTime - meetingEvent.start).getTime()  < 10000){\n        this.toastr.info(`Meeting ${meetingEvent.meetingTopic} Started!`, `Gentle Reminder`);\n      }  \n    }\n\n  }//end of meetingReminder function\n\n \n  /* Database Functions */\n\n\n  public getUserAllMeetingFunction = () => {//this function will get all the meetings of User. \n    this.appService.getUserAllMeeting(this.receiverId,this.authToken).subscribe(\n      (apiResponse) => {\n        if (apiResponse.status == 200) {\n\n          this.meetings = apiResponse.data;\n          //console.log(this.meetings)\n\n          for(let meetingEvent of this.meetings) {\n              meetingEvent.title =  meetingEvent.meetingTopic;\n              meetingEvent.start = new Date(meetingEvent.meetingStartDate);\n              meetingEvent.end = new Date(meetingEvent.meetingEndDate);\n              meetingEvent.color = colors.green;\n              meetingEvent.remindMe = true\n\n            }\n          this.events = this.meetings;\n          this.refresh.next();\n    \n          this.toastr.info(\"Calendar Updated\", \"Meetings Found!\");\n          //console.log(this.events)\n  \n        }\n        else {\n          this.toastr.error(apiResponse.message,\"Error!\");\n          this.events = [];\n        }\n      },\n      (error) => {\n        if(error.status == 400){\n          this.toastr.warning(\"Calendar Failed to Update\", \"Either user or Meeting not found\");\n          this.events = []\n        }\n        else{\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          this.router.navigate(['/serverError']);\n\n        }\n     }\n    );\n    }//end getAllUserMeetings\n  \n  public logoutFunction = () => {\n\n      this.appService.logout(this.receiverId,this.authToken).subscribe(\n        (apiResponse) => {\n          if (apiResponse.status === 200) {\n            localStorage.clear();\n            Cookie.delete('authToken');//delete all the cookies\n            Cookie.delete('receiverId');\n            Cookie.delete('receiverName');\n            //Cookie.delete('arrayOfIds');\n            this.socketService.disconnectedSocket();//calling the method which emits the disconnect event.\n            this.socketService.exitSocket();//this method will disconnect the socket from frontend and close the connection with the server.\n            this.router.navigate(['/user/login']);//redirects the user to login page.\n          } else {\n            this.toastr.error(apiResponse.message,\"Error!\")\n            //this.router.navigate(['/serverError']);//in case of error redirects to error page.\n          } // end condition\n        },\n        (err) => {\n          if(err.status == 404){\n            this.toastr.warning(\"Logout Failed\", \"Already Logged Out or Invalid User\");\n          }\n          else{\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate(['/serverError']);\n  \n          }\n      });\n  \n  }//end logout  \n   \n  \n      /* Event based functions */\n\n    //listened\n    public verifyUserConfirmation: any = () => {\n      this.socketService.verifyUser()\n        .subscribe(() => {\n          this.socketService.setUser(this.authToken);//in reply to verify user emitting set-user event with authToken as parameter.\n  \n        });//end subscribe\n    }//end verifyUserConfirmation\n  \n    public authErrorFunction: any = () => {\n      \n      this.socketService.listenAuthError()\n        .subscribe((data) => {\n          console.log(data)\n\n        \n  \n        });//end subscribe\n    }//end authErrorFunction\n\n  \n    public getUpdatesFromAdmin= () =>{\n\n      this.socketService.getUpdatesFromAdmin(this.receiverId).subscribe((data) =>{//getting message from admin.\n        this.getUserAllMeetingFunction();\n        this.toastr.info(\"Update From Admin!\",data.message);\n      });\n    }\n  \n}\n\n\n","module.exports = \".icons{\\r\\n    color:lightblue;\\r\\n}\\r\\n\\r\\n#card-design{\\r\\n    cursor:pointer;\\r\\n}\\r\\n\\r\\n#card-design:hover{\\r\\n    background-color: lightblue;\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.people-list {\\r\\n    height: 55vh;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.online{\\r\\n\\r\\n    height: 10px;\\r\\n    width: 10px;\\r\\n    background-color:green;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n\\r\\n.offline{\\r\\n  \\r\\n    height: 10px;\\r\\n    width: 10px;\\r\\n    background-color:red;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n\\r\\n.own-navbar{\\r\\n    padding-bottom: 1vh;\\r\\n  }\\r\\n\\r\\n.item-padding{\\r\\n    padding-bottom: 3vh;\\r\\n  }\\r\\n\\r\\n@media only screen and (max-width:575px) {\\r\\n    .icons {\\r\\n      font-size: 1.8em;\\r\\n    }\\r\\n    .nav-item{\\r\\n        margin-left: .2vw;\\r\\n        margin-right: .2vw;\\r\\n    }\\r\\n    h3{\\r\\n        font-size: 1.5em;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (min-width:576px) and (max-width:768px) {\\r\\n    .icons {\\r\\n        font-size: 2.5em;\\r\\n      }\\r\\n      .nav-item{\\r\\n        margin-left: 1vw;\\r\\n        margin-right: 1vw;\\r\\n    }\\r\\n \\r\\n    }\\r\\n\\r\\n@media only screen and (min-width:769px) and (max-width:992px) {\\r\\n    .icons {\\r\\n        font-size: 3em;\\r\\n      }\\r\\n      .nav-item{\\r\\n        margin-left: 2vw;\\r\\n        margin-right: 2vw;\\r\\n    }\\r\\n \\r\\n    }\\r\\n\\r\\n@media only screen and (min-width:993px) and (max-width:1200px) {\\r\\n    .icons {\\r\\n        font-size: 3.5em;\\r\\n      }\\r\\n      .nav-item{\\r\\n        margin-left: 4vw;\\r\\n        margin-right: 4vw;\\r\\n    }\\r\\n \\r\\n}\\r\\n\\r\\n@media only screen and (min-width:1201px)  {\\r\\n    .icons {\\r\\n        font-size: 4em;\\r\\n      }\\r\\n      .nav-item{\\r\\n        margin-left: 6vw;\\r\\n        margin-right: 6vw;\\r\\n    }\\r\\n \\r\\n}\\r\\n\"","module.exports = \"<ng-template #modalContent let-close=\\\"close\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Meeting Details</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 meeting-info-wrapper\\\">\\n\\n        <div class=\\\"card\\\" id=\\\"subjectCard\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Subject</h5>\\n            <p class=\\\"card-text\\\" *ngIf=\\\"subject\\\">{{subject}} </p>\\n            <p *ngIf=\\\"!subject\\\" class=\\\"alert alert-danger\\\">** Subject is required</p>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card\\\" id=\\\"whoCard\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Participant</h5>\\n            <p class=\\\"card-text\\\" *ngIf=\\\"selectedUser\\\">{{selectedUser.firstName}} {{selectedUser.lastName}}</p>\\n            <p *ngIf=\\\"!selectedUser\\\" class=\\\"alert alert-danger\\\">** User is required</p>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card\\\" id=\\\"whenCard\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Date & Time</h5>\\n            <p class=\\\"card-text\\\" *ngIf=\\\"startDate1 && endDate1\\\">{{startDate1 | date: 'medium'}} -\\n              {{endDate1 | date: 'medium' }}</p>\\n\\n            <p *ngIf=\\\"!startDate1\\\" class=\\\"alert alert-danger\\\">** Start Date/Time is required</p>\\n            <p *ngIf=\\\"!endDate1\\\" class=\\\"alert alert-danger\\\">** End Date/Time is required</p>\\n\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"card\\\" id=\\\"whereCard\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Location</h5>\\n            <p class=\\\"card-text\\\" *ngIf=\\\"venue\\\">{{venue}}</p>\\n            <p *ngIf=\\\"!venue\\\" class=\\\"alert alert-danger\\\">** Venue is required</p>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer btns-wrapper text-center\\\">\\n    <button id=\\\"btn-finalize\\\" type=\\\"button\\\" class=\\\"btn btn-success rounded\\\" (click)=\\\"createMeetingFunction();close()\\\">\\n      Confirm Meeting\\n    </button>  \\n  </div>\\n\\n</ng-template>\\n\\n\\n<div class=\\\"dashboard-wrapper\\\">\\n  <div class=\\\"header-wrapper text-center border-bottom border-info\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row align-items-center\\\">\\n\\n\\n        <div class=\\\"col-sm-12 col-md-2 col-lg-3 own-navbar\\\">\\n          <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner Logo\\\" />\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-10 col-lg-9 own-navbar\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"float: right;\\\">\\n            <button id=\\\"btnGroupDropUserInfo\\\" type=\\\"button\\\" class=\\\"btn btn-outline-info rounded\\\" data-toggle=\\\"dropdown\\\"\\n              aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{adminName ? adminName : 'Admin'}}\\n            </button>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"btnGroupDropUserInfo\\\">\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"goToAdminDashboard()\\\">Home</a>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"dashboard-body-wrap create-meeting-wrap\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row  create-meeting-inner-wrapper\\\">\\n      <div class=\\\"col-sm-12 col-md-4 col-lg-4\\\">\\n        <ul class=\\\"nav nav-tabs flex-row\\\" role=\\\"tablist\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" data-target=\\\"#subject\\\">\\n              Add Topic\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" data-target=\\\"#who\\\">\\n              Add User\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" data-target=\\\"#when\\\">\\n              Add Timing\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" data-target=\\\"#where\\\">\\n              Add Location\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-sm-12 col-md-8 col-lg-8\\\">\\n        <div class=\\\"tab-content meeting-steps\\\">\\n\\n          <div id=\\\"subject\\\" class=\\\"container tab-pane active\\\">\\n            <div class=\\\"row \\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" #topic=\\\"ngModel\\\" id=\\\"inputSubject\\\" name=\\\"subject\\\" [(ngModel)]=\\\"subject\\\"\\n                    class=\\\"form-control\\\" placeholder=\\\"Meeting Topic\\\" required autofocus>\\n\\n                  <div [hidden]=\\\"topic.pristine || topic.valid\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"topic.errors?.required\\\">\\n                      Reuired\\n                    </div>\\n                  </div>\\n\\n                  <textarea type=\\\"text\\\" #agenda=\\\"ngModel\\\" id=\\\"inputDescription\\\" name=\\\"description\\\"\\n                    [(ngModel)]=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Topic Description\\\" required></textarea>\\n\\n                  <div [hidden]=\\\"agenda.pristine || agenda.valid\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"agenda.errors?.required\\\">\\n                      Required\\n                    </div>\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div id=\\\"who\\\" class=\\\"container tab-pane fade\\\">\\n\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-12 col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" id=\\\"inputUserName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Search User Name\\\">\\n                  <div class=\\\"people-list\\\">\\n                    <div class=\\\"card my-card\\\" id=\\\"card-design\\\" *ngFor=\\\"let user of allUsersData | filter:userName\\\">\\n\\n                      <div class=\\\"card-body p-2\\\" (click)=\\\"getSelected(user)\\\" *ngIf=\\\"user.userId != receiverId\\\">\\n                        <span class=\\\"d-block font-adjust-heading\\\">{{user.firstName}} {{user.lastName}}</span>\\n                        <span class=\\\"d-block font-adjust-heading\\\">{{user.email}}</span>\\n                        <span class=\\\"d-block font-adjust-heading\\\" *ngIf=\\\"user.isAdmin=='true'\\\">Admin <i\\n                            class=\\\"fas fa-user-plus\\\"></i></span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-12 col-md-6 selected-user\\\">\\n                <h6>Selected User</h6>\\n                <div class=\\\"card selected-user-wrap\\\" *ngIf=\\\"selectedUser\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <span class=\\\"selected-user-title\\\">{{selectedUser.firstName}} {{selectedUser.lastName}}</span>\\n                  </div>\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n          </div>\\n\\n          <div id=\\\"when\\\" class=\\\"container tab-pane fade\\\">\\n            <br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"time-wrapper\\\">\\n                    <span class=\\\"form-heading\\\">Start Time </span>\\n\\n                    <label for=\\\"startTime\\\" class=\\\"sr-only\\\">Start Time:</label>\\n                    <input [owlDateTime]=\\\"dt1\\\" name=\\\"startDate1\\\" [(ngModel)]=\\\"startDate1\\\" placeholder=\\\"Start Date Time\\\">\\n                    <span [owlDateTimeTrigger]=\\\"dt1\\\">\\n                      <i class=\\\"fa fa-calendar\\\"></i>\\n                    </span>\\n                    <owl-date-time #dt1></owl-date-time>\\n                  </div>\\n                  <div class=\\\"time-wrapper\\\">\\n                    <span class=\\\"form-heading\\\">End Time </span>\\n\\n                    <label for=\\\"endTime\\\" class=\\\"sr-only\\\">End Time:</label>\\n                    <input [owlDateTime]=\\\"dt2\\\" name=\\\"endDate1\\\" [(ngModel)]=\\\"endDate1\\\" placeholder=\\\"End Date Time\\\">\\n\\n                    <span [owlDateTimeTrigger]=\\\"dt2\\\">\\n                      <i class=\\\"fa fa-calendar\\\"></i>\\n                    </span>\\n                    <owl-date-time #dt2></owl-date-time>\\n\\n\\n\\n                    <div *ngIf=\\\"validateDate(startDate1,endDate1)\\\" class=\\\"alert alert-danger\\\">\\n                      End date cannot be same as start date\\n                    </div>\\n\\n                    <div *ngIf=\\\"validateCurrentDate(startDate1) || validateCurrentDate(endDate1)\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      End date must be greater than start date.\\n                    </div>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div id=\\\"where\\\" class=\\\"container tab-pane fade\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" #location=\\\"ngModel\\\" pattern=\\\"^[A-za-z ]+$\\\" id=\\\"inputVenue\\\" name=\\\"venue\\\"\\n                    [(ngModel)]=\\\"venue\\\" class=\\\"form-control\\\" placeholder=\\\"Location\\\" required>\\n\\n                  <div [hidden]=\\\"location.pristine || location.valid\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"location.errors?.pattern\\\">\\n                      allowed only letters\\n                    </div>\\n                    <div *ngIf=\\\"location.errors?.required\\\">\\n                      Required\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 btns-wrapper text-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-info rounded\\\" style=\\\"float: right;\\\"\\n                  (click)=\\\"viewScheduledMeetingFunction()\\\">\\n                  Confirm Metting\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ViewEncapsulation, TemplateRef } from '@angular/core';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap/modal/modal.module';\n\nimport { AppService } from '../../app.service';\nimport { SocketService } from '../../socket.service';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//for cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\n\n \n\n@Component({\n  selector: 'app-create-meeting',\n  templateUrl: './create-meeting.component.html',\n  styleUrls: ['./create-meeting.component.css'],\n  encapsulation: ViewEncapsulation.Native  \n})\nexport class CreateMeetingComponent implements OnInit {\n  @ViewChild('modalContent') modalContent: TemplateRef<any>;\n\n\n  public selectedUser: any;\n  public allUsers: any[];\n  public allUsersData: any[];\n  public subject: any;\n  public description: any;  \n  public startDate1: any;\n  public endDate1: any;\n  public venue: any;\n  public userInfo: any;\n  public authToken: any;\n  public receiverId: any;\n  public receiverName: any;\n  public adminName: any;\n  public userName: any; \n\n  constructor(\n    public appService: AppService,\n    public socketService: SocketService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n    private modal: NgbModal,\n \n  ) { }\n \n  ngOnInit() {\n\n    this.authToken = Cookie.get('authToken');\n    this.receiverId = Cookie.get('receiverId');\n    this.receiverName = Cookie.get('receiverName');\n    this.adminName = Cookie.get('receiverName');\n\n    this.userInfo = this.appService.getUserInfoFromLocalStorage()\n\n    if(this.userInfo.isAdmin == 'true'){\n      this.getAllUsers();\n    }else{\n      this.router.navigate(['/user/normal/meeting/dashboard']);      \n    }\n\n  }\n\n  public getSelected = (user) => {\n    this.selectedUser = user\n  }\n\n  public goToAdminDashboard(): any {\n    this.router.navigate(['/user/admin/meeting/dashboard']);\n  }//end of goToAdminDashboard function\n\n  public validateDate(startDate:any, endDate:any):boolean {//method to validate the the start and end date of meeting .\n\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n\n    if(end < start){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }//end validateDate\n\n\n  public validateCurrentDate(startDate:any):boolean {//method to validate the current date and date of meeting .\n\n    let start = new Date(startDate);\n    let end : any = new Date();\n\n    if(end > start){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }//end validateDate\n\n  public createMeetingFunction(): any {\n\n  if (!this.subject) {\n    this.toastr.warning(\"Subject is required\", \"Warning!\");\n  }\n  else if (!this.description) {\n    this.toastr.warning(\"Description is required\", \"Warning!\");\n  }\n  else if (!this.selectedUser) {\n    this.toastr.warning(\"Participant is required\", \"Warning!\");\n  }\n  else if (!this.startDate1) {\n    this.toastr.warning(\"Start Date/Time is required\", \"Warning!\");\n  }\n  else if (!this.endDate1) {\n    this.toastr.warning(\"End Date/Time is required\", \"Warning!\");\n  }\n  else if (!this.venue) {\n    this.toastr.warning(\"Venue is required\", \"Warning!\");\n  }\n  else if (this.validateDate(this.startDate1 ,this.endDate1)) {\n    this.toastr.warning(\"End Date/Time cannot be before Start Date/Time\", \"Warning!\");\n  }\n  else if (this.validateCurrentDate(this.startDate1) && this.validateCurrentDate(this.endDate1)) {\n    this.toastr.warning(\"Meeting can't be schedule in back date/time\", \"Warning!\");\n  }\n  else {\n    let data = {\n      meetingTopic: this.subject,\n      hostId: this.receiverId,\n      hostName:this.receiverName,\n      participantId:this.selectedUser.userId,\n      participantName:this.selectedUser.firstName + ' ' + this.selectedUser.lastName,\n      participantEmail:this.selectedUser.email,\n      meetingStartDate:this.startDate1.getTime(),\n      meetingEndDate:this.endDate1.getTime(),\n      meetingDescription:this.description,\n      meetingPlace:this.venue,\n      authToken:this.authToken\n    }\n\n    console.log(data)  \n    this.appService.addMeeting(data).subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Email Sent to the participant\", \"Meeting Confirmed\");\n \n          let dataForNotify = {\n            message: `Hi, <br/> ${data.hostName} has Schedule a Meeting With You. Please check your Calendar/Email`,\n            userId:data.participantId\n          }\n\n          this.notifyUpdatesToUser(dataForNotify);\n          setTimeout(() => {\n            this.goToAdminDashboard();\n          }, 1000);//redirecting to admin dashboard page\n\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          if(error.status == 400){\n            this.toastr.warning(\"Meeting Schedule Failed\", \"One or more fields are missing\");\n          }\n          else{\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate(['/serverError']);\n\n          }\n      });//end calling addMeeting\n  }\n  }//end addMeeting function\n\n\n  public getAllUsers = () => {//this function will get all the normal users from database. \n    if(this.authToken){\n      this.appService.getUsers(this.authToken).subscribe(//using the apiget all normal users.\n        (apiResponse) => {\n          if (apiResponse.status == 200) {\n            this.allUsersData = apiResponse.data;\n            this.allUsers = []\n            for(let i = 0; i < this.allUsersData.length; i++) {\n              let user = this.allUsersData[i].firstName + ' ' + this.allUsersData[i].lastName;\n              if(user != undefined) {\n                  this.allUsers.push(user);\n              }\n          }\n      \n            //this.toastr.info(\"Update\", \"All users listed\");\n            //console.log(this.allUsers)\n     \n          }\n          else {\n            this.toastr.error(apiResponse.message,\"Error!\");\n          }\n        },\n        (error) => {\n          this.toastr.error('Server error occured');\n        }\n      );//end get users\n    \n    }//end if\n    else{\n      this.toastr.info(\"Missing Authorization Key\", \"Please login again\");\n      this.router.navigate(['/user/login']);\n\n    }\n\n\n}//end getAllUsers\n\n\n  /* Events based Functions */\n\n  //emitted \n\n  public notifyUpdatesToUser: any = (data) => {\n    //data will be object with message and userId(recieverId)\n    this.socketService.notifyUpdates(data);\n  }//end notifyUpdatesToUser\n\n  public viewScheduledMeetingFunction: any = () => {\n    this.modal.open(this.modalContent, { size: 'lg' });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateMeetingComponent } from './create-meeting/create-meeting.component';\nimport { UpdateMeetingComponent } from './update-meeting/update-meeting.component';\n\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { DragAndDropModule } from 'angular-draggable-droppable';\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport {  NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    OwlDateTimeModule, \n    OwlNativeDateTimeModule,\n    DragAndDropModule.forRoot(),\n    Ng2SearchPipeModule,\n    NgbModalModule.forRoot(),\n\n    \n  ],\n  declarations: [CreateMeetingComponent, UpdateMeetingComponent]\n})\nexport class MeetingModule { }\n ","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard-wrapper\\\">\\n  <div class=\\\"header-wrapper text-center border-bottom border-info\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row align-items-center\\\">\\n        <div class=\\\"col-sm-12 col-md-2 col-lg-3 own-navbar\\\">\\n          <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner Logo\\\" />\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-10 col-lg-9 own-navbar\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"float: right;\\\">\\n            <button id=\\\"btnGroupDropUserInfo\\\" type=\\\"button\\\" class=\\\"btn btn-outline-info rounded\\\" data-toggle=\\\"dropdown\\\"\\n              aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{adminName ? adminName : 'Admin'}}\\n            </button>  \\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"btnGroupDropUserInfo\\\">\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"goToAdminDashboard()\\\">Home</a>\\n            </div>\\n          </div>  \\n        \\n        </div>   \\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"dashboard-body-wrap\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n\\n\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"row update-meeting-wrap\\\">\\n          <div class=\\\"card  col-12 col-sm-12 col-md-6 col-lg-6\\\" id=\\\"card-subject\\\">\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-header\\\">\\n                <h4> Subject </h4>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" #topic=\\\"ngModel\\\" id=\\\"inputSubject\\\" name=\\\"subject\\\" [(ngModel)]=\\\"subject\\\"\\n                    class=\\\"form-control\\\" placeholder=\\\"Our First Meeting\\\" required autofocus>\\n                  <div [hidden]=\\\"topic.pristine || topic.valid\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"topic.errors?.required\\\">\\n                      Required!\\n                    </div>\\n                  </div>\\n                  <br>\\n\\n                  <textarea type=\\\"text\\\" #agenda=\\\"ngModel\\\" id=\\\"inputDescription\\\" name=\\\"description\\\"\\n                    [(ngModel)]=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description of Meeting\\\"\\n                    required></textarea>\\n                  <div [hidden]=\\\"agenda.pristine || agenda.valid\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"agenda.errors?.required\\\">\\n                      Required!\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card  col-12 col-sm-12 col-md-6 col-lg-6\\\" id=\\\"card-Participant\\\">\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-header\\\">\\n                <h4> Participant </h4>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{selectedUser}} </h5>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card  col-12 col-sm-12 col-md-6 col-lg-6\\\" id=\\\"card-when\\\">\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-header\\\">\\n                <h4>Date and Time</h4>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"time-wrapper\\\">\\n                    <span class=\\\"form-heading\\\">Start Time </span>\\n\\n\\n                    <input [owlDateTime]=\\\"dt1\\\" name=\\\"startDate1\\\" [(ngModel)]=\\\"startDate1\\\" placeholder=\\\"Start Date Time\\\">\\n                    <span [owlDateTimeTrigger]=\\\"dt1\\\">\\n                      <i class=\\\"fa fa-calendar\\\"></i>\\n                    </span>\\n                    <owl-date-time #dt1></owl-date-time>\\n                  </div>\\n\\n                  <div class=\\\"time-wrapper\\\">\\n                    <span class=\\\"form-heading\\\">End Time </span>\\n\\n\\n                    <input [owlDateTime]=\\\"dt2\\\" name=\\\"endDate1\\\" [(ngModel)]=\\\"endDate1\\\" placeholder=\\\"End Date Time\\\">\\n                    <span [owlDateTimeTrigger]=\\\"dt2\\\">\\n                      <i class=\\\"fa fa-calendar\\\"></i>\\n                    </span>\\n                    <owl-date-time #dt2></owl-date-time>\\n\\n                    <div *ngIf=\\\"validateDate(startDate1,endDate1)\\\" class=\\\"alert alert-danger\\\">\\n                      End date cannot be same as start date.\\n                    </div>\\n\\n                    <div *ngIf=\\\"validateCurrentDate(startDate1) || validateCurrentDate(endDate1)\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      End date must be greater than start date\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card  col-12 col-sm-12 col-md-6 col-lg-6\\\" id=\\\"card-where\\\">\\n            <div class=\\\"card-inner\\\">\\n              <div class=\\\"card-header\\\">\\n                <h4>Location </h4>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-12\\\">\\n\\n                    <input type=\\\"text\\\" #location=\\\"ngModel\\\" pattern=\\\"^[A-za-z ]+$\\\" id=\\\"inputVenue\\\" name=\\\"venue\\\"\\n                      [(ngModel)]=\\\"venue\\\" class=\\\"form-control\\\" placeholder=\\\"Venue\\\" required>\\n                    <div [hidden]=\\\"location.pristine || location.valid\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"location.errors?.pattern\\\">\\n                        Only letters allowed\\n                      </div>\\n                      <div *ngIf=\\\"location.errors?.required\\\">\\n                        Required!\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 btns-wrapper\\\">\\n        <button id=\\\"btn-finalize\\\" type=\\\"button\\\" class=\\\"btn btn-primary rounded\\\" (click)=\\\"updateMeetingFunction()\\\"\\n          style=\\\"float:right\\\">\\n          Reschedule Meeting</button>  \\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { AppService } from '../../app.service';\nimport { SocketService } from '../../socket.service';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\nimport { ActivatedRoute, Router } from '@angular/router';\n//for cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\n\n@Component({\n  selector: 'app-update-meeting',\n  templateUrl: './update-meeting.component.html',\n  styleUrls: ['./update-meeting.component.css']\n})\nexport class UpdateMeetingComponent implements OnInit {\n  public selectedUser: any;\n\n  public meetingDetails: any;\n  public meetingId: any;\n  public subject: any;\n  public description: any;\n  public startDate1: any;\n  public endDate1: any;\n  public venue: any;\n  public participantId:any;\n\n\n  public userInfo: any;\n  public authToken: any;\n  public receiverId: any;\n  public receiverName: any;\n  public adminName: any;\n\n  constructor(\n    public appService: AppService,\n    public socketService: SocketService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n\n  ) { }\n\n  ngOnInit() {\n    this.authToken = Cookie.get('authToken');\n    this.receiverId = Cookie.get('receiverId');\n    this.receiverName = Cookie.get('receiverName');\n    this.adminName = Cookie.get('receiverName');\n\n    this.userInfo = this.appService.getUserInfoFromLocalStorage()\n    this.meetingId = this._route.snapshot.paramMap.get('meetingId');\n\n    if(this.userInfo.isAdmin == 'true'){\n      this.getMeetingDetailsFunction(this.meetingId, this.authToken) ;\n    }else{\n      this.router.navigate(['/user/normal/meeting/dashboard']);      \n    }\n\n\n  \n  }\n\n  public validateDate(startDate:any, endDate:any):boolean {//method to validate the the start and end date of meeting .\n\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n\n    if(end < start){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }//end validateDate\n\n\n  public validateCurrentDate(startDate:any):boolean {//method to validate the current date and date of meeting .\n\n    let start = new Date(startDate);\n    let end : any = new Date();\n\n    if(end > start){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }//end validateDate\n\n  public goToAdminDashboard(): any {\n    this.router.navigate(['/user/admin/meeting/dashboard']);\n  }//end of goToAdminDashboard function\n\n  public getMeetingDetailsFunction = (meetingId, authToken) => {//this function will get meeting details. \n\n    this.appService.getMeetingDetails(meetingId, authToken).subscribe(//using the api get metting details.\n      (apiResponse) => {\n        if (apiResponse.status == 200) {\n          this.meetingDetails = apiResponse.data;\n          this.toastr.info(\"Meeting Details Captured \", \"Meeting Found!\");\n\n          //console.log(this.meetingDetails)\n          this.participantId = this.meetingDetails.participantId\n          this.subject = this.meetingDetails.meetingTopic;\n          this.description = this.meetingDetails.meetingDescription;\n          this.startDate1 = new Date(this.meetingDetails.meetingStartDate);\n          this.endDate1 = new Date(this.meetingDetails.meetingEndDate);\n          this.venue = this.meetingDetails.meetingPlace;\n          this.selectedUser = this.meetingDetails.participantName;          \n        }\n        else {\n          this.toastr.error(apiResponse.message,\"Error!\");\n        }\n      },\n      (error) => {\n        if (error.status == 404) {\n          this.toastr.warning(\"Meeting Not Found\", \"\");\n        }\n        else {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          this.router.navigate(['/serverError']);\n\n        }\n      }\n    );\n  }//end getAllUsers\n\n\n  public updateMeetingFunction(): any {\n\n    if (!this.subject) {\n      this.toastr.warning(\"Subject is required\", \"Warning!\");\n    }\n    else if (!this.description) {\n      this.toastr.warning(\"Description is required\", \"Warning!\");\n    }\n    else if (!this.startDate1) {\n      this.toastr.warning(\"Start Date/Time is required\", \"Warning!\");\n    }\n    else if (!this.endDate1) {\n      this.toastr.warning(\"End Date/Time is required\", \"Warning!\");\n    }\n    else if (!this.venue) {\n      this.toastr.warning(\"Venue is required\", \"Warning!\");\n    }\n    else if (this.validateDate(this.startDate1 ,this.endDate1)) {\n      this.toastr.warning(\"End Date/Time cannot be before Start Date/Time\", \"Warning!\");\n    }\n    else if (this.validateCurrentDate(this.startDate1) && this.validateCurrentDate(this.endDate1)) {\n      this.toastr.warning(\"Meeting can't be schedule in back date/time\", \"Warning!\");\n    }\n    else {\n      let data = {\n        meetingId: this.meetingId,\n        meetingTopic: this.subject,\n        meetingDescription:this.description,\n        meetingStartDate:this.startDate1.getTime(),\n        meetingEndDate:this.endDate1.getTime(),\n        meetingPlace:this.venue,\n        authToken:this.authToken\n      }\n  \n      console.log(data)  \n      this.appService.updateMeeting(data)\n        .subscribe((apiResponse) => {\n  \n          if (apiResponse.status == 200) {\n            this.toastr.success(\"We emailed the final schedule to participant\", \"Meeting Rescheduled\");\n            \n\n            let dataForNotify = {\n              message: `Hi, ${this.receiverName} has reschedule the Meeting - ${data.meetingTopic}. Please check your Calendar/Email`,\n              userId:this.participantId\n            }\n  \n            this.notifyUpdatesToUser(dataForNotify);\n            \n            setTimeout(() => {\n              this.goToAdminDashboard();\n            }, 1000);//redirecting to admin dashboard page\n  \n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            if(error.status == 400){\n              this.toastr.warning(\"Meeting Schedule Failed\", \"One or more fields are missing\");\n            }\n            else{\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\n              this.router.navigate(['/serverError']);\n  \n            }\n        });//end calling updatemeeting\n    }\n    }//end updatemeeting function\n  \n    /* Events based Functions */\n\n  //emitted \n\npublic notifyUpdatesToUser: any = (data) => {\n  //data will be object with message and userId(recieverId)\n  this.socketService.notifyUpdates(data);\n\n}//end notifyUpdatesToUser\n\n}\n","module.exports = \".cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"box-body-wrap\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"inner-box-body-wrap\\\">\\n      <div class=\\\"top-btns\\\">\\n        <a class=\\\"nav-link top-box-links\\\" [routerLink]=\\\"['/user/signup']\\\">\\n          <span class=\\\"fa fa-arrow-left\\\"></span>\\n          Sign Up\\n        </a>   \\n      </div>\\n      <div class=\\\"logo-wrap text-center\\\">\\n        <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner\\\" />\\n      </div>\\n      <div class=\\\"text-404 text-center\\\">\\n        <h4>OOPS!! 404 Error</h4>\\n        <p>Page Not Found!!!</p>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-12 controls\\\">\\n            <a id=\\\"btn-signin\\\" class=\\\"sigin-404-btn nav-link top-box-links btn btn-primary\\\"\\n              [routerLink]=\\\"['/user/login']\\\">\\n              <span class=\\\"fa fa-arrow-left\\\"></span>\\n              Go Back to Sign In\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n//Location services\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n  }\n  public goBack = (): any => {\n    this.location.back();\n  }\n\n}\n ","module.exports = \".cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.icons{\\r\\n    color:lightblue;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"box-body-wrap\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"inner-box-body-wrap\\\">\\n      <div class=\\\"top-btns\\\">\\n        <a class=\\\"nav-link top-box-links\\\" [routerLink]=\\\"['/user/signup']\\\">\\n          <span class=\\\"fa fa-arrow-left\\\"></span>\\n          Sign Up\\n        </a>   \\n      </div>\\n      <div class=\\\"logo-wrap text-center\\\">\\n        <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner\\\" />\\n      </div>\\n      <div class=\\\"text-404 text-center\\\">\\n        <h4>OOPS!! 500 Error</h4>\\n        <p>Server Error</p>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-12 controls\\\">\\n            <a id=\\\"btn-signin\\\" class=\\\"sigin-404-btn nav-link top-box-links btn btn-primary\\\"\\n              [routerLink]=\\\"['/user/login']\\\">\\n              <span class=\\\"fa fa-arrow-left\\\"></span>\\n              Go Back to Sign In\\n            </a>   \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  constructor(\n    public router: Router,\n\n  ) { }\n\n  public goToSignIn(): any {\n    this.router.navigate(['/user/login']);\n  }//end of goToSign function\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".crop {\\n    border-radius: 100%;\\n    line-height: 1em;\\n    padding: 1em;\\n    text-align: center;\\n    margin: 0em;\\n    width: 3em;\\n    height: 3em;\\n    float: left;\\n    text-transform: uppercase;\\n  }\"","module.exports = \"<div (click)='nameClicked()'  class=\\\"crop\\\" [style.color]=\\\"userColor ? userColor :'white'\\\" [style.background]=\\\"userBg ? userBg :'blue'\\\">\\n    {{firstChar}}\\n  </div>\"","import { Component, OnChanges, Input, EventEmitter, Output, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'first-char',\n  templateUrl: './first-char.component.html',\n  styleUrls: ['./first-char.component.css']\n})\nexport class FirstCharComponent implements OnInit,OnChanges {\n\n  @Input() userName: string;\n  @Input() userBg: string;\n  @Input() userColor: string;\n\n  public firstChar: string;\n  private _name:string = '';\n\n  @Output()\n  notify: EventEmitter<String> = new EventEmitter<String>();\n\n\n\n  ngOnInit(): void {\n      this._name = this.userName;\n      this.firstChar = this._name[0];\n\n  } // end ngOnInit\n\n\n  ngOnChanges(changes: SimpleChanges){\n    let name  = changes.userName;\n    this._name = name.currentValue;\n    this.firstChar = this._name[0];\n  }\n\n\n  nameClicked(){\n    this.notify.emit(this._name);\n  }\n}\n","module.exports = \".bg{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n   \\r\\n    background-size: 100% 100%;\\r\\n    background-position: top center;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"bg\\\">\\n  <div style=\\\"height:500px\\\">\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'my-cover',\n  templateUrl: './my-cover.component.html',\n  styleUrls: ['./my-cover.component.css']\n})\nexport class MyCoverComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<!-- <nav class=\\\"navbar sticky-top navbar-expand-lg navbar-light \\\" style=\\\"background-color: #e3f2fd\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo03\\\" aria-controls=\\\"navbarTogglerDemo03\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <a class=\\\"navbar-brand h1\\\" href=\\\"#\\\">Let'sMeet</a>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo03\\\">\\n      <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/user/login']\\\">Login </a>\\n        </li>\\n\\n        <li class=\\\"nav-item \\\">\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/user/signup']\\\">Register </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\">Help</a>\\n          </li>\\n      </ul>\\n  </div>\\n</nav> -->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nimport { FirstCharComponent } from './first-char/first-char.component';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { MyCoverComponent } from './my-cover/my-cover.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [ FirstCharComponent, MyNavComponent, MyCoverComponent],\n  exports: [\n    FirstCharComponent,\n    MyNavComponent,\n    MyCoverComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\n//Added for Http and Observables\nimport { HttpClient, HttpClientModule, HttpErrorResponse, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport * as io from 'socket.io-client';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  public baseUrl = \"http://localhost:3000\";\n  public socket;\n\n  constructor(private _http: HttpClient) {\n    //console.log(\"SocketService is called\");\n    //handshake is happening\n    this.socket = io(this.baseUrl);\n\n  }\n\n    //events that has to be listen\n    public verifyUser = () => {\n      return Observable.create((observer) => {\n        this.socket.on('verifyUser', (data) => {\n          observer.next(data);\n        });//On method\n      });//end observable\n    }//end verifyUser\n  \n    public onlineUserList = () => {\n      return Observable.create((observer) => {\n        this.socket.on('online-user-list', (userList) => {\n          observer.next(userList);\n        });//end On method\n      });//end observable\n  \n    }//end onlineUserList\n  \n    public disconnect = () => {\n      return Observable.create((observer) => {\n        this.socket.on('disconnect', () => {\n          observer.next();\n        });//end On method\n      });//end observable\n  \n    }//end disconnect\n\n    public listenAuthError = () => {\n      return Observable.create((observer) => {\n        this.socket.on('auth-error', (data) => {\n          observer.next(data);\n        }); // end Socket\n      }); // end Observable\n    } // end listenAuthError\n      \n    public getUpdatesFromAdmin = (userId) => {\n      return Observable.create((observer) => {\n        this.socket.on(userId, (data) => {\n          observer.next(data);\n        }); // end Socket\n      }); // end Observable\n    } // end getUpdatesFromAdmin\n\n    //* Events that are emitted *//\n\n\n  public setUser = (authToken) => {\n    this.socket.emit('set-user', authToken);\n  }\n\n\n  public notifyUpdates = (data) => {\n    this.socket.emit('notify-updates', data);\n  }\n\n  public exitSocket = () =>{\n    this.socket.disconnect();\n  }// end exit socket\n\n  public disconnectedSocket = () => {\n\n      this.socket.emit(\"disconnect\", \"\");//end Socket\n\n  }//end disconnectedSocket\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"box-body-wrap\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"inner-box-body-wrap\\\">\\n            <div class=\\\"top-btns\\\">\\n                <a class=\\\"nav-link top-box-links\\\" [routerLink]=\\\"['/user/login']\\\">\\n                    <span class=\\\"fa fa-arrow-left\\\"></span>\\n                    Sign In\\n                </a>\\n            </div>\\n            <div class=\\\"logo-wrap text-center\\\">\\n                <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner\\\" />\\n            </div>\\n            <div class=\\\"text-center \\\">\\n                <form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <input type=\\\"email\\\" id=\\\"inputEmail\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\"\\n                            placeholder=\\\"Enter Email to get verify password link\\\" name=\\\"email\\\" required autofocus>\\n                    </div>   \\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"col-sm-12 controls\\\">\\n                            <button id=\\\"btn-send\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                                (click)=\\\"forgotPasswordFunction()\\\">\\n                                Send</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { AppService } from '../../app.service';\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public email: any;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public forgotPasswordFunction(): any {\n\n    if (!this.email) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    }\n    else {\n      let data = {\n        email: this.email,\n      }\n\n      //console.log(data)  \n      this.appService.resetPassword(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Reset Password\", \"Password reset instructions sent successfully\");\n\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            if(error.status == 404){\n              this.toastr.warning(\"Reset Password Failed\", \"Email Not Found!\");\n            }\n            else{\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\n              this.router.navigate(['/serverError']);\n  \n            }\n              \n          });//end calling signUpFunction\n    }\n  }//end signUp function\n\n}\n","module.exports = \".nav-link.f-password {\\r\\n    display: block;\\r\\n    padding: .5rem 0px;\\r\\n    width: 100%;\\r\\n    text-align: right;\\r\\n    font-size: 14px;\\r\\n    color: #38b4b9;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"box-body-wrap\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"inner-box-body-wrap\\\">\\n            <div class=\\\"top-btns\\\">\\n                <a class=\\\"nav-link top-box-links\\\" [routerLink]=\\\"['/user/signup']\\\">\\n                    <span class=\\\"fa fa-arrow-left\\\"></span>\\n                    Sign Up\\n                </a>\\n            </div>\\n            <div class=\\\"logo-wrap text-center\\\">\\n                <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner\\\" />\\n            </div>\\n            <form id=\\\"loginform\\\" class=\\\"login-form-wrapper\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                    <input type=\\\"email\\\" id=\\\"inputEmail\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Email address\\\" name=\\\"email\\\" required autofocus>\\n                </div>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <input type=\\\"password\\\" id=\\\"inputPassword\\\" [(ngModel)]=\\\"password\\\"\\n                        (keydown)=\\\"loginUsingKeypress($event)\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Password\\\" required>\\n                    <a class=\\\"nav-link f-password\\\" [routerLink]=\\\"['/user/forgot-password']\\\">Forgot\\n                        password?</a>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-12 controls\\\">\\n                        <button id=\\\"btn-signin\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"signInFunction()\\\">\\n                            Sign In\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { AppService } from '../../app.service';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//import for Routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//for cookies\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public email: any;\n  public password: any;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n\n  ) { }\n\n  public goToAdminDashboard(): any {\n    this.router.navigate(['/user/admin/meeting/dashboard']);\n  }\n\n  public goToUserDashboard(): any {\n    this.router.navigate(['/user/normal/meeting/dashboard']);\n  }\n\n  public signInFunction(): any {\n\n    if (!this.email) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    }\n    else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning!\");\n    }\n    else {\n      let data = {\n        email: this.email,\n        password: this.password,\n      }\n\n      console.log(data)  \n      this.appService.signIn(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Login Successfull\", \"Welcome to Meeting Planner\");\n            \n            \n            Cookie.set('authToken', apiResponse.data.authToken);\n            Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n            Cookie.set('receiverName', `${apiResponse.data.userDetails.firstName} ${apiResponse.data.userDetails.lastName}`);\n            this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails);\n            \n            setTimeout(() => {\n\n              if(apiResponse.data.userDetails.isAdmin == \"true\"){\n                this.goToAdminDashboard();\n              }else{\n                this.goToUserDashboard();\n              }\n\n            }, 1000);\n\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            \n            if(error.status == 404){\n              this.toastr.warning(\"Login Failed\", \"User Not Exist!\");\n            }\n            else if(error.status == 400){\n              this.toastr.warning(\"Login Failed\", \"Wrong Password\");\n            }\n            else{\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\n              this.router.navigate(['/serverError']);\n  \n            }\n              \n          });\n    }\n  }\n  public loginUsingKeypress: any = (event: any) => {\n\n    if (event.keyCode === 13) { \n\n      this.signInFunction();\n\n    }\n\n  }\n\n  ngOnInit() {\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"box-body-wrap\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"inner-box-body-wrap\\\">\\n\\n      <div class=\\\"logo-wrap text-center\\\">\\n        <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner\\\" />\\n      </div>\\n\\n      <form id=\\\"loginform\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n\\n        <div class=\\\"input-group mb-3\\\">\\n\\n          <input type=\\\"password\\\" #pass=\\\"ngModel\\\" id=\\\"inputPassword\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\" minlength=\\\"8\\\" required>\\n        </div>\\n        <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"pass.errors?.minlength\\\">\\n            Atleast 8 characters\\n          </div>\\n          <div *ngIf=\\\"pass.errors?.required\\\">\\n            Required\\n          </div>\\n        </div>\\n\\n        <div class=\\\"input-group mb-3\\\">\\n\\n          <input type=\\\"password\\\" #pass2=\\\"ngModel\\\" id=\\\"inputConfirmPassword\\\" name=\\\"confirmPassword\\\"\\n            [(ngModel)]=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Re-enter Password\\\" minlength=\\\"8\\\" required>\\n        </div>\\n\\n        <div [hidden]=\\\"pass2.pristine || password==confirmPassword\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"password!=confirmPassword\\\">\\n            Password does not match\\n          </div>\\n          <div *ngIf=\\\"pass2.errors?.required\\\">\\n            Required\\n          </div>\\n        </div>\\n\\n        <div style=\\\"margin-top:10px\\\" class=\\\"form-group\\\">\\n          <!-- Button -->\\n\\n          <div class=\\\"col-sm-12 controls\\\">\\n            <button id=\\\"btn-save\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updatePasswordFunction()\\\">\\n              <i class=\\\"icon-hand-right\\\"></i> Save</button>\\n          </div>\\n        </div>\\n\\n      </form>\\n    </div>\\n\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public validationToken:any;\n  public password:any;\n  public confirmPassword:any;\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n\n  ) { }\n\n  ngOnInit() {\n    this.validationToken = this._route.snapshot.paramMap.get('validationToken');\n\n  }\n\n  public goToSignIn(): any {\n    this.router.navigate(['/user/login']);\n  }//end of goToSign function\n\n  public updatePasswordFunction(): any {\n    if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning!\");\n    }\n    else if (!this.confirmPassword) {\n      this.toastr.warning(\"Confirm Password is required\", \"Warning!\");\n    }\n    else{\n      let data = {\n        validationToken: this.validationToken,\n        password: this.password,\n      }\n  \n      this.appService.updatePassword(data)\n        .subscribe((apiResponse) => {\n  \n  \n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Please login\", \"Password Updated!\");\n            setTimeout(() => {\n              this.goToSignIn();\n            }, 1000);//redirecting to signIn page\n\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            if(error.status == 404){\n              this.toastr.warning(\"Password Update failed\", \"Please request another password reset!\");\n            }\n            else{\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\n              this.router.navigate(['/serverError']);\n  \n            }\n              \n          });//end calling signUpFunction\n  \n    }\n  \n}//end signUp function\n\n}\n","module.exports = \".cardBorder{\\r\\n    box-shadow: 0 4px 8px 0 #4ABDAC, 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"box-body-wrap\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"inner-box-body-wrap\\\">\\n      <div class=\\\"top-btns\\\">\\n\\n        <a class=\\\"nav-link top-box-links\\\" [routerLink]=\\\"['/user/login']\\\">\\n          <span class=\\\"fa fa-arrow-left\\\"></span>\\n          Sign In</a>\\n      </div>\\n      <div class=\\\"logo-wrap text-center\\\">\\n        <img src=\\\"./../../../assets/images/logo.png\\\" alt=\\\"Meeting Planner\\\" />\\n      </div>\\n      <form id=\\\"signupform\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n\\n        <div id=\\\"signupalert\\\" style=\\\"display:none\\\" class=\\\"alert alert-danger\\\">\\n          <p>Error:</p>\\n          <span></span>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n\\n              <div class=\\\"col-md-12 pd-right-0\\\">\\n                <input type=\\\"text\\\" #fstName=\\\"ngModel\\\" pattern=\\\"^[A-za-z ]+$\\\" minlength=\\\"2\\\" id=\\\"inputFirstName\\\"\\n                  name=\\\"firstName\\\" [(ngModel)]=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required\\n                  autofocus>\\n\\n\\n                <div [hidden]=\\\"fstName.pristine || fstName.valid\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"fstName.errors?.pattern\\\">\\n                    only letters\\n\\n                  </div>\\n                  <div *ngIf=\\\"fstName.errors?.minlength\\\">\\n                    atleast 2 letters\\n                  </div>\\n                  <div *ngIf=\\\"fstName.errors?.required\\\">\\n                    Required\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n\\n              <div class=\\\"col-md-12 pd-left-0\\\">\\n                <input type=\\\"text\\\" #lstName=\\\"ngModel\\\" pattern=\\\"^[A-za-z ]+$\\\" minlength=\\\"2\\\" id=\\\"inputLastName\\\"\\n                  name=\\\"lastName\\\" [(ngModel)]=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" required>\\n                <div [hidden]=\\\"lstName.pristine || lstName.valid\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"lstName.errors?.pattern\\\">\\n                    Only letters\\n\\n                  </div>\\n                  <div *ngIf=\\\"lstName.errors?.minlength\\\">\\n                    atleast 2 letters\\n                  </div>\\n                  <div *ngIf=\\\"lstName.errors?.required\\\">\\n                    Required\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <div class=\\\"col-md-12\\\">\\n            <input type=\\\"email\\\" #emailId=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n              id=\\\"inputEmail\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\"\\n              required>\\n\\n            <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n                Invalid\\n\\n              </div>\\n              <div *ngIf=\\\"emailId.errors?.required\\\">\\n                Required\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <div class=\\\"col-md-12\\\">\\n            <input type=\\\"text\\\" #user=\\\"ngModel\\\" pattern=\\\"^[A-za-z0-9- ]+$\\\" minlength=\\\"6\\\" id=\\\"inputUserName\\\"\\n              name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" class=\\\"form-control\\\" placeholder=\\\"User Name\\\" required>\\n            <div [hidden]=\\\"user.pristine || user.valid\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"user.errors?.pattern\\\">\\n                Only Letters and Digits are allowed\\n                <div *ngIf=\\\"user.errors?.minlength\\\">\\n                  atleast 6 chracters\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"user.errors?.required\\\">\\n                Required\\n              </div>\\n            </div>\\n            <!-- <div *ngIf=\\\"isAdmin == 'true' && userName\\\">\\n              <div *ngIf=\\\"validateUserName(userName)\\\" class=\\\"alert alert-danger\\\">\\n                ** Admin user should have '-admin' at the end of User Name\\n              </div>\\n            </div> -->\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <div class=\\\"col-md-12\\\">\\n            <input type=\\\"password\\\" #pass=\\\"ngModel\\\" id=\\\"inputPassword\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\"\\n              class=\\\"form-control\\\" placeholder=\\\"Password\\\" minlength=\\\"8\\\" required>\\n            <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"pass.errors?.minlength\\\">\\n                atleast 8 characters\\n              </div>\\n              <div *ngIf=\\\"pass.errors?.required\\\">\\n                Required\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-md-12 pd-right-0\\\">\\n\\n                <select  [(ngModel)]=\\\"country\\\" #Country=\\\"ngModel\\\" name=\\\"country\\\" class=\\\"form-control\\\" id=\\\"inputCountry\\\"\\n                  (click)=\\\"onChangeOfCountry()\\\" required>\\n                  <option [ngValue]=\\\"undefined\\\" disabled>Select Country</option>\\n                  <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.code\\\">{{country.name}}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-md-12 pd-left-0\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-text\\\">+{{countryCode}}</div>\\n                  <input type=\\\"number\\\" #mobileNum=\\\"ngModel\\\" pattern=\\\"^\\\\d{10}$\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\"\\n                    name=\\\"mobile\\\" [(ngModel)]=\\\"mobileNumber\\\" placeholder=\\\"Mobile\\\" required>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"checkbox\\\">\\n            <div class=\\\"col-md-12\\\">\\n                \\n              <input id=\\\"inputAdmin\\\" [(ngModel)]=\\\"isAdmin\\\" (change)=\\\"checkValue(isAdmin?'true':'false')\\\" type=\\\"checkbox\\\"\\n                name=\\\"isAdmin\\\"> Sign up as admin\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button id=\\\"btn-signup\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"signupFunction()\\\">\\n              Sign Up</button>\\n          </div>\\n        </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n  public firstName: any;\n  public lastName: any;\n  public email: any;\n  public password: any;\n  public userName: any;\n  public adminUserName: any;\n  public country: any;\n  public mobileNumber: any;\n  public isAdmin: any;\n  public allCountries: any;\n  public countryCode: string;\n  public countryName: string;\n  public countries: any[] = [];\n  public countryCodes: string[];\n\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n\n  ) { }\n\n  ngOnInit() {\n    this.getCountries();\n    this.getCountryCodes();\n    // console.log(this.isAdmin)\n  }\n\n  /***\n   * Redirect To Sign In\n   */\n  public redirectToSignIn(): any {\n    this.router.navigate(['/user/login']);\n  }\n\n  /***\n   * SignUp Function\n   */\n  public signupFunction(): any {\n\n    if (!this.firstName) {\n      this.toastr.warning(\"First Name is required\", \"Warning!\");\n    }\n    else if (!this.lastName) {\n      this.toastr.warning(\"Last Name is required\", \"Warning!\");\n    }\n    else if (!this.userName) {\n      this.toastr.warning(\"User Name is required\", \"Warning!\");\n    }\n    else if (!this.mobileNumber) {\n      this.toastr.warning(\"Mobile Number is required\", \"Warning!\");\n    }\n    else if (!this.country) {\n      this.toastr.warning(\"Country is required\", \"Warning!\");\n    }\n    else if (!this.email) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    }\n    else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning!\");\n    }\n    else {\n\n      if (this.isAdmin == undefined) {\n        this.isAdmin = 'false';\n        this.adminUserName = this.userName;\n      }\n      /**********\n       * Add -admin for admin username\n       */\n      if (this.isAdmin == \"true\") {\n        this.adminUserName = this.userName + \"-admin\";\n      }\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: `${this.countryCode} ${this.mobileNumber}`,\n        email: this.email,\n        password: this.password,\n        userName: this.adminUserName,\n        countryName: this.countryName,\n        isAdmin: this.isAdmin\n      }\n\n      this.appService.signUp(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Please Check your email for verification link\", \"User Created Successfully.\");\n            setTimeout(() => {\n              this.redirectToSignIn();\n            }, 1000);\n\n          } else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate(['/serverError']);\n          });\n    }\n  }\n\n\n  /************\n   * Check Value for Checkbox\n   */\n  checkValue(event: any) {\n    this.isAdmin = event;\n\n  }\n\n\n  /***********\n   * On Change of Country Set Value\n   */\n\n  public onChangeOfCountry() {\n\n    this.countryCode = this.countryCodes[this.country];\n    this.countryName = this.allCountries[this.country];\n  }\n\n\n  /*********\n   *  Show List of Countries in Select Box\n   */\n\n  public getCountries() {\n    this.appService.getCountryNames()\n      .subscribe((data) => {\n        this.allCountries = data;\n        for (let i in data) {\n          let singleCountry = {\n            name: data[i],\n            code: i\n          }\n          this.countries.push(singleCountry);\n        }\n        this.countries = this.countries.sort((first, second) => {\n          return first.name.toUpperCase() < second.name.toUpperCase() ? -1 : (first.name.toUpperCase() > second.name.toUpperCase() ? 1 : 0);\n        });\n      })\n\n  }\n\n\n  /*************\n   * Get Countries Code\n   */\n\n  public getCountryCodes() {\n    this.appService.getCountryNumbers()\n      .subscribe((data) => {\n        this.countryCodes = data;\n      })\n  }\n\n \n  // public validateUserName = (name: string): boolean => {\n\n  //   if (name.substr(name.length - 6, name.length - 1) != \"-admin\") { //here 6 is of length of '-admin'\n  //     return true;\n  //   }\n  //   else {\n  //     return false;\n  //   }\n\n  // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    SharedModule\n  ],\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent, VerifyEmailComponent, ResetPasswordComponent]\n})\nexport class UserModule { }\n","module.exports = \".email-login-link:hover,\\r\\n.email-login-link:active,\\r\\n.email-login-link:focus,\\r\\n.email-login-link{\\r\\n    color:#3dbdc2;\\r\\n    \\r\\n    letter-spacing: 1px;\\r\\n}\"","module.exports = \"<div class=\\\"box-body-wrap\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"inner-box-body-wrap text-center\\\">\\n            <h6>Your account has been verified. You can <a class=\\\"email-login-link\\\" [routerLink]=\\\"['/user/login']\\\">Login </a>\\n                now.</h6>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AppService } from '../../app.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n  public userId:string;\n\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n\n  ) { }\n\n  ngOnInit() {\n    this.userId = this._route.snapshot.paramMap.get('userId');\n    this.verifyEmailFunction()\n  }\n\n  public verifyEmailFunction(): any {\n\n      this.appService.verifyEmail(this.userId)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Please login\", \"Email Verified!\");\n          }\n          else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n          (error) => {\n            if(error.status == 404){\n              this.toastr.warning(\"Email Verification failed\", \"User Not Found!\");\n            }\n            else{\n              this.toastr.error(\"Some Error Occurred\", \"Error!\");\n              this.router.navigate(['/serverError']);\n  \n            }\n              \n          });//end calling signUpFunction\n    \n  }//end signUp function\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}